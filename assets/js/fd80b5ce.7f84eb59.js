"use strict";(self.webpackChunktalawa_docs=self.webpackChunktalawa_docs||[]).push([[93104],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var o=r.createContext({}),l=function(e){var t=r.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(o.Provider,{value:t},e.children)},v="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,o=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),v=l(n),d=a,f=v["".concat(o,".").concat(d)]||v[d]||p[d]||s;return n?r.createElement(f,i(i({ref:t},u),{},{components:n})):r.createElement(f,i({ref:t},u))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,i=new Array(s);i[0]=d;var c={};for(var o in t)hasOwnProperty.call(t,o)&&(c[o]=t[o]);c.originalType=e,c[v]="string"==typeof e?e:a,i[1]=c;for(var l=2;l<s;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},39305:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>p,frontMatter:()=>s,metadata:()=>c,toc:()=>l});var r=n(87462),a=(n(67294),n(3905));const s={},i="fetchRegistrantsByEvent method",c={unversionedId:"talawa-mobile-docs/services_event_service/EventService/fetchRegistrantsByEvent",id:"talawa-mobile-docs/services_event_service/EventService/fetchRegistrantsByEvent",title:"fetchRegistrantsByEvent method",description:"Future fetchRegistrantsByEvent",source:"@site/docs/talawa-mobile-docs/services_event_service/EventService/fetchRegistrantsByEvent.md",sourceDirName:"talawa-mobile-docs/services_event_service/EventService",slug:"/talawa-mobile-docs/services_event_service/EventService/fetchRegistrantsByEvent",permalink:"/docs/talawa-mobile-docs/services_event_service/EventService/fetchRegistrantsByEvent",draft:!1,editUrl:"https://github.com/PalisadoesFoundation/talawa-docs/edit/develop/docs/talawa-mobile-docs/services_event_service/EventService/fetchRegistrantsByEvent.md",tags:[],version:"current",frontMatter:{},sidebar:"Talawa",previous:{title:"eventStream property",permalink:"/docs/talawa-mobile-docs/services_event_service/EventService/eventStream"},next:{title:"getEvents method",permalink:"/docs/talawa-mobile-docs/services_event_service/EventService/getEvents"}},o={},l=[{value:"Implementation",id:"implementation",level:2}],u={toc:l},v="wrapper";function p(e){let{components:t,...n}=e;return(0,a.kt)(v,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"fetchregistrantsbyevent-method"},"fetchRegistrantsByEvent method"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://api.flutter.dev/flutter/dart-async/Future-class.html"},"Future")," fetchRegistrantsByEvent\n(",(0,a.kt)("a",{parentName:"p",href:"https://api.flutter.dev/flutter/dart-core/String-class.html"},"String")," eventId)"),(0,a.kt)("p",null,"This function is used to fetch all registrants of an event."),(0,a.kt)("p",null,(0,a.kt)("strong",null,"params"),":"),(0,a.kt)("ul",null,(0,a.kt)("li",null,(0,a.kt)("code",null,"eventId"),": id of an event.")),(0,a.kt)("p",null,(0,a.kt)("strong",null,"returns"),":"),(0,a.kt)("ul",null,(0,a.kt)("li",null,(0,a.kt)("code",null,"Future<dynamic>"),": Information about event registrants.")),(0,a.kt)("h2",{id:"implementation"},"Implementation"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-dart"},"Future<dynamic> fetchRegistrantsByEvent(String eventId) async {\n  await _dbFunctions.refreshAccessToken(userConfig.currentUser.refreshToken!);\n  final result = await _dbFunctions.gqlAuthQuery(\n    EventQueries().registrantsByEvent(eventId),\n  );\n  return result;\n}\n")))}p.isMDXComponent=!0}}]);