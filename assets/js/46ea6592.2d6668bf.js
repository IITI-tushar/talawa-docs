"use strict";(self.webpackChunktalawa_docs=self.webpackChunktalawa_docs||[]).push([[32697],{3905:(e,t,o)=>{o.d(t,{Zo:()=>c,kt:()=>f});var r=o(67294);function a(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function n(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,r)}return o}function l(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?n(Object(o),!0).forEach((function(t){a(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):n(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function i(e,t){if(null==e)return{};var o,r,a=function(e,t){if(null==e)return{};var o,r,a={},n=Object.keys(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||(a[o]=e[o]);return a}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(a[o]=e[o])}return a}var s=r.createContext({}),d=function(e){var t=r.useContext(s),o=t;return e&&(o="function"==typeof e?e(t):l(l({},t),e)),o},c=function(e){var t=d(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var o=e.components,a=e.mdxType,n=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=d(o),m=a,f=u["".concat(s,".").concat(m)]||u[m]||p[m]||n;return o?r.createElement(f,l(l({ref:t},c),{},{components:o})):r.createElement(f,l({ref:t},c))}));function f(e,t){var o=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var n=o.length,l=new Array(n);l[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[u]="string"==typeof e?e:a,l[1]=i;for(var d=2;d<n;d++)l[d]=o[d];return r.createElement.apply(null,l)}return r.createElement.apply(null,o)}m.displayName="MDXCreateElement"},90838:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>p,frontMatter:()=>n,metadata:()=>i,toc:()=>d});var r=o(87462),a=(o(67294),o(3905));const n={},l="operator == method",i={unversionedId:"talawa-mobile-docs/models_organization_org_info/OrgInfoAdapter/operator_equals",id:"talawa-mobile-docs/models_organization_org_info/OrgInfoAdapter/operator_equals",title:"operator == method",description:"- @override",source:"@site/docs/talawa-mobile-docs/models_organization_org_info/OrgInfoAdapter/operator_equals.md",sourceDirName:"talawa-mobile-docs/models_organization_org_info/OrgInfoAdapter",slug:"/talawa-mobile-docs/models_organization_org_info/OrgInfoAdapter/operator_equals",permalink:"/docs/talawa-mobile-docs/models_organization_org_info/OrgInfoAdapter/operator_equals",draft:!1,editUrl:"https://github.com/PalisadoesFoundation/talawa-docs/edit/develop/docs/talawa-mobile-docs/models_organization_org_info/OrgInfoAdapter/operator_equals.md",tags:[],version:"current",frontMatter:{},sidebar:"Talawa",previous:{title:"hashCode property",permalink:"/docs/talawa-mobile-docs/models_organization_org_info/OrgInfoAdapter/hashCode"},next:{title:"read method",permalink:"/docs/talawa-mobile-docs/models_organization_org_info/OrgInfoAdapter/read"}},s={},d=[{value:"Implementation",id:"implementation",level:2}],c={toc:d},u="wrapper";function p(e){let{components:t,...o}=e;return(0,a.kt)(u,(0,r.Z)({},c,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"operator--method"},"operator == method"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"@",(0,a.kt)("a",{parentName:"li",href:"https://api.flutter.dev/flutter/dart-core/override-constant.html"},"override"))),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://api.flutter.dev/flutter/dart-core/bool-class.html"},"bool")," operator ==\n(",(0,a.kt)("a",{parentName:"p",href:"https://api.flutter.dev/flutter/dart-core/Object-class.html"},"Object")," other)"),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},(0,a.kt)("span",{class:"feature"},"override"))),(0,a.kt)("p",null,"The equality operator."),(0,a.kt)("p",null,"The default behavior for all ",(0,a.kt)("a",{href:"https://api.flutter.dev/flutter/dart-core/Object-class.html"},"Object"),"s is to return true if and only if this object and ",(0,a.kt)("code",null,"other")," are the same object."),(0,a.kt)("p",null,"Override this method to specify a different equality relation on a class. The overriding method must still be an equivalence relation. That is, it must be:"),(0,a.kt)("ul",null,(0,a.kt)("li",null,(0,a.kt)("p",null,"Total: It must return a boolean for all arguments. It should never throw.")),(0,a.kt)("li",null,(0,a.kt)("p",null,"Reflexive: For all objects ",(0,a.kt)("code",null,"o"),", ",(0,a.kt)("code",null,"o == o")," must be true.")),(0,a.kt)("li",null,(0,a.kt)("p",null,"Symmetric: For all objects ",(0,a.kt)("code",null,"o1")," and ",(0,a.kt)("code",null,"o2"),", ",(0,a.kt)("code",null,"o1 == o2")," and ",(0,a.kt)("code",null,"o2 == o1")," must either both be true, or both be false.")),(0,a.kt)("li",null,(0,a.kt)("p",null,"Transitive: For all objects ",(0,a.kt)("code",null,"o1"),", ",(0,a.kt)("code",null,"o2"),", and ",(0,a.kt)("code",null,"o3"),", if ",(0,a.kt)("code",null,"o1 == o2")," and",(0,a.kt)("code",null,"o2 == o3")," are true, then ",(0,a.kt)("code",null,"o1 == o3")," must be true."))),(0,a.kt)("p",null,"The method should also be consistent over time, so whether two objects are equal should only change if at least one of the objects was modified."),(0,a.kt)("p",null,"If a subclass overrides the equality operator, it should override the ",(0,a.kt)("a",{href:"../../models_organization_org_info/OrgInfoAdapter/hashCode.md"},"hashCode")," method as well to maintain consistency."),(0,a.kt)("h2",{id:"implementation"},"Implementation"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-dart"},"@override\nbool operator ==(Object other) =>\n    identical(this, other) ||\n    other is OrgInfoAdapter &&\n        runtimeType == other.runtimeType &&\n        typeId == other.typeId;\n")))}p.isMDXComponent=!0}}]);