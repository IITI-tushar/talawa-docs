"use strict";(self.webpackChunktalawa_docs=self.webpackChunktalawa_docs||[]).push([[29967],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),c=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(i.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(n),m=a,f=u["".concat(i,".").concat(m)]||u[m]||d[m]||o;return n?r.createElement(f,s(s({ref:t},p),{},{components:n})):r.createElement(f,s({ref:t},p))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=m;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l[u]="string"==typeof e?e:a,s[1]=l;for(var c=2;c<o;c++)s[c]=n[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},78206:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var r=n(87462),a=(n(67294),n(3905));const o={},s="send method",l={unversionedId:"talawa-mobile-docs/services_graphql_config/MockHttpClient/send",id:"talawa-mobile-docs/services_graphql_config/MockHttpClient/send",title:"send method",description:"- @override",source:"@site/docs/talawa-mobile-docs/services_graphql_config/MockHttpClient/send.md",sourceDirName:"talawa-mobile-docs/services_graphql_config/MockHttpClient",slug:"/talawa-mobile-docs/services_graphql_config/MockHttpClient/send",permalink:"/docs/talawa-mobile-docs/services_graphql_config/MockHttpClient/send",draft:!1,editUrl:"https://github.com/PalisadoesFoundation/talawa-docs/edit/develop/docs/talawa-mobile-docs/services_graphql_config/MockHttpClient/send.md",tags:[],version:"current",frontMatter:{},sidebar:"Talawa",previous:{title:"MockHttpClient constructor",permalink:"/docs/talawa-mobile-docs/services_graphql_config/MockHttpClient/"},next:{title:"MockHttpClient class",permalink:"/docs/talawa-mobile-docs/services_graphql_config/MockHttpClient-class"}},i={},c=[{value:"Implementation",id:"implementation",level:2}],p={toc:c},u="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"send-method"},"send method"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"@",(0,a.kt)("a",{parentName:"li",href:"https://api.flutter.dev/flutter/dart-core/override-constant.html"},"override"))),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://api.flutter.dev/flutter/dart-async/Future-class.html"},"Future"),"<",(0,a.kt)("a",{parentName:"p",href:"https://pub.dev/documentation/http/0.13.6/http/StreamedResponse-class.html"},"StreamedResponse"),"> send\n(",(0,a.kt)("a",{parentName:"p",href:"https://pub.dev/documentation/http/0.13.6/http/BaseRequest-class.html"},"BaseRequest"),"? request)"),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},(0,a.kt)("span",{class:"feature"},"override"))),(0,a.kt)("p",null,"Sends an HTTP request and asynchronously returns the response."),(0,a.kt)("h2",{id:"implementation"},"Implementation"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-dart"},"@override\nFuture<http.StreamedResponse> send(http.BaseRequest? request) =>\n    // ignore: invalid_use_of_visible_for_testing_member\n    super.noSuchMethod(\n      Invocation.method(#send, [request]),\n      returnValue: Future.value(\n        http.StreamedResponse(\n          Stream.fromIterable(const [<int>[]]),\n          500,\n        ),\n      ),\n    ) as Future<http.StreamedResponse>;\n")))}d.isMDXComponent=!0}}]);