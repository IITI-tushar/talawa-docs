"use strict";(self.webpackChunktalawa_docs=self.webpackChunktalawa_docs||[]).push([[914592],{120227:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>v,frontMatter:()=>o,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"talawa-mobile-docs/services_task_service/TaskService/getTasksForEvent","title":"getTasksForEvent method","description":"Future&lt;void\\\\> getTasksForEvent","source":"@site/docs/talawa-mobile-docs/services_task_service/TaskService/getTasksForEvent.md","sourceDirName":"talawa-mobile-docs/services_task_service/TaskService","slug":"/talawa-mobile-docs/services_task_service/TaskService/getTasksForEvent","permalink":"/docs/talawa-mobile-docs/services_task_service/TaskService/getTasksForEvent","draft":false,"unlisted":false,"editUrl":"https://github.com/PalisadoesFoundation/talawa-docs/edit/develop/docs/talawa-mobile-docs/services_task_service/TaskService/getTasksForEvent.md","tags":[],"version":"current","frontMatter":{},"sidebar":"Talawa","previous":{"title":"getTasksByUser method","permalink":"/docs/talawa-mobile-docs/services_task_service/TaskService/getTasksByUser"},"next":{"title":"tasks property","permalink":"/docs/talawa-mobile-docs/services_task_service/TaskService/tasks"}}');var n=s(474848),r=s(28453);const o={},i="getTasksForEvent method",c={},d=[{value:"Implementation",id:"implementation",level:2}];function l(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"gettasksforevent-method",children:"getTasksForEvent method"})}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.a,{href:"https:api.flutter.dev/flutter/dart-async/Future-class.html",children:"Future"}),"<void> getTasksForEvent\n(",(0,n.jsx)(t.a,{href:"https:api.flutter.dev/flutter/dart-core/String-class.html",children:"String"})," eventId)"]}),"\n",(0,n.jsx)(t.p,{children:"<p>This function is used to get all the tasks for the event.</p>\n<p>params:</p>\n<ul>\n<li><code>eventId</code> : id of an event for which tasks need to fetched,</li>\n</ul>"}),"\n",(0,n.jsx)(t.h2,{id:"implementation",children:"Implementation"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-dart",children:"Future\\<void\\> getTasksForEvent(String eventId) async \\{\n  await _databaseMutationFunctions\n      .refreshAccessToken(_userConfig.currentUser.refreshToken!);\n  final res = await _databaseMutationFunctions\n      .gqlNonAuthQuery(TaskQueries.eventTasks(eventId));\n\n  if (res != null) \\{\n    _tasks.clear();\n    final tasksList = res.data!['tasksByEvent'] as List;\n    tasksList.forEach((task) \\{\n      _tasks.add(Task.fromJson(task as Map\\<String, dynamic\\>));\n    \\});\n  \\}\n\\}\n"})})]})}function v(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},28453:(e,t,s)=>{s.d(t,{R:()=>o,x:()=>i});var a=s(296540);const n={},r=a.createContext(n);function o(e){const t=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),a.createElement(r.Provider,{value:t},e.children)}}}]);