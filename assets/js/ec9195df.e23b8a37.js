"use strict";(self.webpackChunktalawa_docs=self.webpackChunktalawa_docs||[]).push([[835569],{579973:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>h,contentTitle:()=>n,default:()=>l,frontMatter:()=>i,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"talawa-mobile-docs/services_chat_service/ChatService/getDirectChatMessagesByChatId","title":"getDirectChatMessagesByChatId method","description":"Future&lt;void\\\\> getDirectChatMessagesByChatId","source":"@site/docs/talawa-mobile-docs/services_chat_service/ChatService/getDirectChatMessagesByChatId.md","sourceDirName":"talawa-mobile-docs/services_chat_service/ChatService","slug":"/talawa-mobile-docs/services_chat_service/ChatService/getDirectChatMessagesByChatId","permalink":"/docs/talawa-mobile-docs/services_chat_service/ChatService/getDirectChatMessagesByChatId","draft":false,"unlisted":false,"editUrl":"https://github.com/PalisadoesFoundation/talawa-docs/edit/develop/docs/talawa-mobile-docs/services_chat_service/ChatService/getDirectChatMessagesByChatId.md","tags":[],"version":"current","frontMatter":{},"sidebar":"Talawa","previous":{"title":"chatStream property","permalink":"/docs/talawa-mobile-docs/services_chat_service/ChatService/chatStream"},"next":{"title":"getDirectChatsByUserId method","permalink":"/docs/talawa-mobile-docs/services_chat_service/ChatService/getDirectChatsByUserId"}}');var c=a(474848),r=a(28453);const i={},n="getDirectChatMessagesByChatId method",h={},o=[{value:"Implementation",id:"implementation",level:2}];function d(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(t.header,{children:(0,c.jsx)(t.h1,{id:"getdirectchatmessagesbychatid-method",children:"getDirectChatMessagesByChatId method"})}),"\n",(0,c.jsxs)(t.p,{children:[(0,c.jsx)(t.a,{href:"https:api.flutter.dev/flutter/dart-async/Future-class.html",children:"Future"}),"<void> getDirectChatMessagesByChatId\n(dynamic chatId)"]}),"\n",(0,c.jsx)(t.p,{children:"<p>This function is used to get all the chat messages of a particular chat by the user.</p>\n<p>parameters required:</p>\n<ul>\n<li><code>chatId</code> - id of the direct chat.</li>\n</ul>"}),"\n",(0,c.jsx)(t.h2,{id:"implementation",children:"Implementation"}),"\n",(0,c.jsx)(t.pre,{children:(0,c.jsx)(t.code,{className:"language-dart",children:"Future\\<void\\> getDirectChatMessagesByChatId(chatId) async \\{\n  trigger graphQL query to get all the chat messages of a particular chat using [chatId].\n  final String query =\n      ChatQueries().fetchDirectChatMessagesByChatId(chatId as String);\n\n  final result = await _dbFunctions.gqlAuthQuery(query);\n\n  final messages = result.data['directChatsMessagesByChatID'] as List;\n\n  messages.forEach((message) \\{\n    final chatMessage = ChatMessage.fromJson(message as Map\\<String, dynamic\\>);\n    _chatMessageController.add(chatMessage);\n  \\});\n\\}\n"})})]})}function l(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,c.jsx)(t,{...e,children:(0,c.jsx)(d,{...e})}):d(e)}},28453:(e,t,a)=>{a.d(t,{R:()=>i,x:()=>n});var s=a(296540);const c={},r=s.createContext(c);function i(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function n(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:i(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);