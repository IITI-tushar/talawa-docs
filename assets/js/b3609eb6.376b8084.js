"use strict";(self.webpackChunktalawa_docs=self.webpackChunktalawa_docs||[]).push([[39920],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=r.createContext({}),c=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(u.Provider,{value:t},e.children)},s="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,u=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),s=c(n),g=a,m=s["".concat(u,".").concat(g)]||s[g]||d[g]||i;return n?r.createElement(m,l(l({ref:t},p),{},{components:n})):r.createElement(m,l({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=g;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o[s]="string"==typeof e?e:a,l[1]=o;for(var c=2;c<i;c++)l[c]=n[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},19502:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var r=n(87462),a=(n(67294),n(3905));const i={},l="checkFromPluginList method",o={unversionedId:"talawa-mobile-docs/plugins_talawa_plugin_provider/TalawaPluginProvider/checkFromPluginList",id:"talawa-mobile-docs/plugins_talawa_plugin_provider/TalawaPluginProvider/checkFromPluginList",title:"checkFromPluginList method",description:"bool checkFromPluginList",source:"@site/docs/talawa-mobile-docs/plugins_talawa_plugin_provider/TalawaPluginProvider/checkFromPluginList.md",sourceDirName:"talawa-mobile-docs/plugins_talawa_plugin_provider/TalawaPluginProvider",slug:"/talawa-mobile-docs/plugins_talawa_plugin_provider/TalawaPluginProvider/checkFromPluginList",permalink:"/docs/talawa-mobile-docs/plugins_talawa_plugin_provider/TalawaPluginProvider/checkFromPluginList",draft:!1,editUrl:"https://github.com/PalisadoesFoundation/talawa-docs/edit/develop/docs/talawa-mobile-docs/plugins_talawa_plugin_provider/TalawaPluginProvider/checkFromPluginList.md",tags:[],version:"current",frontMatter:{},sidebar:"Talawa",previous:{title:"build method",permalink:"/docs/talawa-mobile-docs/plugins_talawa_plugin_provider/TalawaPluginProvider/build"},next:{title:"child property",permalink:"/docs/talawa-mobile-docs/plugins_talawa_plugin_provider/TalawaPluginProvider/child"}},u={},c=[{value:"Implementation",id:"implementation",level:2}],p={toc:c},s="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(s,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"checkfrompluginlist-method"},"checkFromPluginList method"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://api.flutter.dev/flutter/dart-core/bool-class.html"},"bool")," checkFromPluginList\n()"),(0,a.kt)("p",null,"return ",(0,a.kt)("code",null,"bool")," decides the final visibility of the verifying from database and current OrgId"),(0,a.kt)("h2",{id:"implementation"},"Implementation"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-dart"},'bool checkFromPluginList() {\n  final UserConfig userConfig = locator<UserConfig>();\n  final Box box;\n  bool res = false;\n  box = Hive.box(\'pluginBox\');\n  var pluginList = box.get(\'plugins\');\n  pluginList ??= []; // if null then make it  []\n\n  ///mapping over the list from the server\n  pluginList\n      .map(\n        (plugin) => {\n          if (plugin["pluginName"] == pluginName)\n            {\n              if (plugin["pluginInstallStatus"] as bool)\n                {\n                  res = plugin["pluginInstallStatus"] as bool ||\n                      plugin["installedOrgs"]\n                          .contains(userConfig.currentOrg.id) as bool\n                }\n            }\n        },\n      )\n      .toList();\n  return res;\n}\n')))}d.isMDXComponent=!0}}]);