"use strict";(self.webpackChunktalawa_docs=self.webpackChunktalawa_docs||[]).push([[83103],{68453:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>n,metadata:()=>l,toc:()=>i});var o=r(85893),s=r(11151);const n={},a="operator == method",l={id:"talawa-mobile-docs/models_user_user_info/UserAdapter/operator_equals",title:"operator == method",description:"- @override",source:"@site/docs/talawa-mobile-docs/models_user_user_info/UserAdapter/operator_equals.md",sourceDirName:"talawa-mobile-docs/models_user_user_info/UserAdapter",slug:"/talawa-mobile-docs/models_user_user_info/UserAdapter/operator_equals",permalink:"/docs/talawa-mobile-docs/models_user_user_info/UserAdapter/operator_equals",draft:!1,unlisted:!1,editUrl:"https://github.com/PalisadoesFoundation/talawa-docs/edit/develop/docs/talawa-mobile-docs/models_user_user_info/UserAdapter/operator_equals.md",tags:[],version:"current",frontMatter:{},sidebar:"Talawa",previous:{title:"hashCode property",permalink:"/docs/talawa-mobile-docs/models_user_user_info/UserAdapter/hashCode"},next:{title:"read method",permalink:"/docs/talawa-mobile-docs/models_user_user_info/UserAdapter/read"}},d={},i=[{value:"Implementation",id:"implementation",level:2}];function c(e){const t={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h1,{id:"operator--method",children:"operator == method"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:["@",(0,o.jsx)(t.a,{href:"https://api.flutter.dev/flutter/dart-core/override-constant.html",children:"override"})]}),"\n"]}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.a,{href:"https://api.flutter.dev/flutter/dart-core/bool-class.html",children:"bool"})," operator ==\n(",(0,o.jsx)(t.a,{href:"https://api.flutter.dev/flutter/dart-core/Object-class.html",children:"Object"})," other)"]}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.em,{children:(0,o.jsx)("span",{class:"feature",children:"override"})})}),"\n",(0,o.jsx)("p",{children:"The equality operator."}),"\n",(0,o.jsxs)("p",{children:["The default behavior for all ",(0,o.jsx)("a",{href:"https://api.flutter.dev/flutter/dart-core/Object-class.html",children:"Object"}),"s is to return true if and\nonly if this object and ",(0,o.jsx)("code",{children:"other"})," are the same object."]}),"\n",(0,o.jsx)("p",{children:"Override this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:"}),"\n",(0,o.jsxs)("ul",{children:[(0,o.jsx)("li",{children:(0,o.jsx)("p",{children:"Total: It must return a boolean for all arguments. It should never throw."})}),(0,o.jsx)("li",{children:(0,o.jsxs)("p",{children:["Reflexive: For all objects ",(0,o.jsx)("code",{children:"o"}),", ",(0,o.jsx)("code",{children:"o == o"})," must be true."]})}),(0,o.jsx)("li",{children:(0,o.jsxs)("p",{children:["Symmetric: For all objects ",(0,o.jsx)("code",{children:"o1"})," and ",(0,o.jsx)("code",{children:"o2"}),", ",(0,o.jsx)("code",{children:"o1 == o2"})," and ",(0,o.jsx)("code",{children:"o2 == o1"})," must\neither both be true, or both be false."]})}),(0,o.jsx)("li",{children:(0,o.jsxs)("p",{children:["Transitive: For all objects ",(0,o.jsx)("code",{children:"o1"}),", ",(0,o.jsx)("code",{children:"o2"}),", and ",(0,o.jsx)("code",{children:"o3"}),", if ",(0,o.jsx)("code",{children:"o1 == o2"})," and\n",(0,o.jsx)("code",{children:"o2 == o3"})," are true, then ",(0,o.jsx)("code",{children:"o1 == o3"})," must be true."]})})]}),"\n",(0,o.jsx)("p",{children:"The method should also be consistent over time,\nso whether two objects are equal should only change\nif at least one of the objects was modified."}),"\n",(0,o.jsxs)("p",{children:["If a subclass overrides the equality operator, it should override\nthe ",(0,o.jsx)("a",{href:"../../models_user_user_info/UserAdapter/hashCode.md",children:"hashCode"})," method as well to maintain consistency."]}),"\n",(0,o.jsx)(t.h2,{id:"implementation",children:"Implementation"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-dart",children:"@override\nbool operator ==(Object other) =>\n    identical(this, other) ||\n    other is UserAdapter &&\n        runtimeType == other.runtimeType &&\n        typeId == other.typeId;\n"})})]})}function h(e={}){const{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},11151:(e,t,r)=>{r.d(t,{Z:()=>l,a:()=>a});var o=r(67294);const s={},n=o.createContext(s);function a(e){const t=o.useContext(n);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),o.createElement(n.Provider,{value:t},e.children)}}}]);