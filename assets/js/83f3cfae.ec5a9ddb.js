"use strict";(self.webpackChunktalawa_docs=self.webpackChunktalawa_docs||[]).push([[60717],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>f});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var i=r.createContext({}),d=function(e){var t=r.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},c=function(e){var t=d(e.components);return r.createElement(i.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,i=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=d(a),m=n,f=p["".concat(i,".").concat(m)]||p[m]||u[m]||o;return a?r.createElement(f,s(s({ref:t},c),{},{components:a})):r.createElement(f,s({ref:t},c))}));function f(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,s=new Array(o);s[0]=m;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l[p]="string"==typeof e?e:n,s[1]=l;for(var d=2;d<o;d++)s[d]=a[d];return r.createElement.apply(null,s)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},84242:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var r=a(87462),n=(a(67294),a(3905));const o={},s="validatePassword method",l={unversionedId:"talawa-mobile-docs/utils_validators/Validator/validatePassword",id:"talawa-mobile-docs/utils_validators/Validator/validatePassword",title:"validatePassword method",description:"String? validatePassword",source:"@site/docs/talawa-mobile-docs/utils_validators/Validator/validatePassword.md",sourceDirName:"talawa-mobile-docs/utils_validators/Validator",slug:"/talawa-mobile-docs/utils_validators/Validator/validatePassword",permalink:"/docs/talawa-mobile-docs/utils_validators/Validator/validatePassword",draft:!1,editUrl:"https://github.com/PalisadoesFoundation/talawa-docs/edit/develop/docs/talawa-mobile-docs/utils_validators/Validator/validatePassword.md",tags:[],version:"current",frontMatter:{},sidebar:"Talawa",previous:{title:"validateLastName method",permalink:"/docs/talawa-mobile-docs/utils_validators/Validator/validateLastName"},next:{title:"validatePasswordConfirm method",permalink:"/docs/talawa-mobile-docs/utils_validators/Validator/validatePasswordConfirm"}},i={},d=[{value:"Implementation",id:"implementation",level:2}],c={toc:d},p="wrapper";function u(e){let{components:t,...a}=e;return(0,n.kt)(p,(0,r.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"validatepassword-method"},"validatePassword method"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://api.flutter.dev/flutter/dart-core/String-class.html"},"String"),"? validatePassword\n(",(0,n.kt)("a",{parentName:"p",href:"https://api.flutter.dev/flutter/dart-core/String-class.html"},"String")," password)"),(0,n.kt)("h2",{id:"implementation"},"Implementation"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-dart"},'static String? validatePassword(\n  String password,\n) {\n  // If password is empty return.\n  if (password.isEmpty) {\n    return "Password must not be left blank";\n  }\n  const String pattern =\n      r\'^(?=.*?[A-Z])(?=.*?[0-9])(?=.*?[!@#\\$&*%^~.]).{8,}$\';\n  final RegExp regExp = RegExp(pattern);\n\n  //Regex for no spaces allowed\n  const String noSpaces = r\'^\\S+$\';\n  final RegExp noSpaceRegex = RegExp(noSpaces);\n\n  if (!noSpaceRegex.hasMatch(password)) {\n    return "Password must not contain spaces";\n  }\n  if (!regExp.hasMatch(password)) {\n    return "Your password must be at least 8 characters long, contain at least one numeric, one uppercase and one lowercase letters and one special character (@,#,\\$,etc.)";\n  }\n\n  return null;\n}\n')))}u.isMDXComponent=!0}}]);