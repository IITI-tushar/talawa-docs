"use strict";(self.webpackChunktalawa_docs=self.webpackChunktalawa_docs||[]).push([[70428],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>m});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},s=Object.keys(e);for(a=0;a<s.length;a++)r=s[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)r=s[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var o=a.createContext({}),l=function(e){var t=a.useContext(o),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},d=function(e){var t=l(e.components);return a.createElement(o.Provider,{value:t},e.children)},u="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,s=e.originalType,o=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),u=l(r),p=n,m=u["".concat(o,".").concat(p)]||u[p]||h[p]||s;return r?a.createElement(m,i(i({ref:t},d),{},{components:r})):a.createElement(m,i({ref:t},d))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var s=r.length,i=new Array(s);i[0]=p;var c={};for(var o in t)hasOwnProperty.call(t,o)&&(c[o]=t[o]);c.originalType=e,c[u]="string"==typeof e?e:n,i[1]=c;for(var l=2;l<s;l++)i[l]=r[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}p.displayName="MDXCreateElement"},95736:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>h,frontMatter:()=>s,metadata:()=>c,toc:()=>l});var a=r(87462),n=(r(67294),r(3905));const s={},i="getDirectChatsByUserId method",c={unversionedId:"talawa-mobile-docs/services_chat_service/ChatService/getDirectChatsByUserId",id:"talawa-mobile-docs/services_chat_service/ChatService/getDirectChatsByUserId",title:"getDirectChatsByUserId method",description:"Future&lt;void> getDirectChatsByUserId",source:"@site/docs/talawa-mobile-docs/services_chat_service/ChatService/getDirectChatsByUserId.md",sourceDirName:"talawa-mobile-docs/services_chat_service/ChatService",slug:"/talawa-mobile-docs/services_chat_service/ChatService/getDirectChatsByUserId",permalink:"/docs/talawa-mobile-docs/services_chat_service/ChatService/getDirectChatsByUserId",draft:!1,editUrl:"https://github.com/PalisadoesFoundation/talawa-docs/edit/develop/docs/talawa-mobile-docs/services_chat_service/ChatService/getDirectChatsByUserId.md",tags:[],version:"current",frontMatter:{},sidebar:"Talawa",previous:{title:"getDirectChatMessagesByChatId method",permalink:"/docs/talawa-mobile-docs/services_chat_service/ChatService/getDirectChatMessagesByChatId"},next:{title:"sendMessageToDirectChat method",permalink:"/docs/talawa-mobile-docs/services_chat_service/ChatService/sendMessageToDirectChat"}},o={},l=[{value:"Implementation",id:"implementation",level:2}],d={toc:l},u="wrapper";function h(e){let{components:t,...r}=e;return(0,n.kt)(u,(0,a.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"getdirectchatsbyuserid-method"},"getDirectChatsByUserId method"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://api.flutter.dev/flutter/dart-async/Future-class.html"},"Future"),"<","void> getDirectChatsByUserId\n()"),(0,n.kt)("p",null,"This function is used to get all the chats by the user."),(0,n.kt)("p",null,"parameters required:"),(0,n.kt)("ul",null,(0,n.kt)("li",null,(0,n.kt)("code",null,"usedId")," - current user id, to get all the direct chats associated with this id.")),(0,n.kt)("h2",{id:"implementation"},"Implementation"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-dart"},"Future<void> getDirectChatsByUserId() async {\n  final userId = _userConfig.currentUser.id;\n\n  // trigger graphQL query to get all the chats of the user using [userId].\n  final String query = ChatQueries().fetchDirectChatsByUserId(userId!);\n\n  final result = await _dbFunctions.gqlAuthQuery(query);\n\n  final directMessageList = result.data['directChatsByUserID'] as List;\n\n  // loop through the result [directMessageList] and append the element to the directChat.\n  directMessageList.forEach((chat) {\n    final directChat =\n        ChatListTileDataModel.fromJson(chat as Map<String, dynamic>);\n\n    directChat.users!.forEach((element) {\n      if (element.id != userId) _chatController.add(directChat);\n    });\n  });\n}\n")))}h.isMDXComponent=!0}}]);