"use strict";(self.webpackChunktalawa_docs=self.webpackChunktalawa_docs||[]).push([[45290],{3905:(e,t,a)=>{a.d(t,{Zo:()=>h,kt:()=>m});var r=a(67294);function s(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function n(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function c(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?n(Object(a),!0).forEach((function(t){s(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):n(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,r,s=function(e,t){if(null==e)return{};var a,r,s={},n=Object.keys(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||(s[a]=e[a]);return s}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(s[a]=e[a])}return s}var o=r.createContext({}),l=function(e){var t=r.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):c(c({},t),e)),a},h=function(e){var t=l(e.components);return r.createElement(o.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var a=e.components,s=e.mdxType,n=e.originalType,o=e.parentName,h=i(e,["components","mdxType","originalType","parentName"]),d=l(a),p=s,m=d["".concat(o,".").concat(p)]||d[p]||u[p]||n;return a?r.createElement(m,c(c({ref:t},h),{},{components:a})):r.createElement(m,c({ref:t},h))}));function m(e,t){var a=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var n=a.length,c=new Array(n);c[0]=p;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i[d]="string"==typeof e?e:s,c[1]=i;for(var l=2;l<n;l++)c[l]=a[l];return r.createElement.apply(null,c)}return r.createElement.apply(null,a)}p.displayName="MDXCreateElement"},6505:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>c,default:()=>u,frontMatter:()=>n,metadata:()=>i,toc:()=>l});var r=a(87462),s=(a(67294),a(3905));const n={},c="getDirectChatMessagesByChatId method",i={unversionedId:"talawa-mobile-docs/services_chat_service/ChatService/getDirectChatMessagesByChatId",id:"talawa-mobile-docs/services_chat_service/ChatService/getDirectChatMessagesByChatId",title:"getDirectChatMessagesByChatId method",description:"Future&lt;void> getDirectChatMessagesByChatId",source:"@site/docs/talawa-mobile-docs/services_chat_service/ChatService/getDirectChatMessagesByChatId.md",sourceDirName:"talawa-mobile-docs/services_chat_service/ChatService",slug:"/talawa-mobile-docs/services_chat_service/ChatService/getDirectChatMessagesByChatId",permalink:"/docs/talawa-mobile-docs/services_chat_service/ChatService/getDirectChatMessagesByChatId",draft:!1,editUrl:"https://github.com/PalisadoesFoundation/talawa-docs/edit/develop/docs/talawa-mobile-docs/services_chat_service/ChatService/getDirectChatMessagesByChatId.md",tags:[],version:"current",frontMatter:{},sidebar:"Talawa",previous:{title:"chatStream property",permalink:"/docs/talawa-mobile-docs/services_chat_service/ChatService/chatStream"},next:{title:"getDirectChatsByUserId method",permalink:"/docs/talawa-mobile-docs/services_chat_service/ChatService/getDirectChatsByUserId"}},o={},l=[{value:"Implementation",id:"implementation",level:2}],h={toc:l},d="wrapper";function u(e){let{components:t,...a}=e;return(0,s.kt)(d,(0,r.Z)({},h,a,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"getdirectchatmessagesbychatid-method"},"getDirectChatMessagesByChatId method"),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://api.flutter.dev/flutter/dart-async/Future-class.html"},"Future"),"<","void> getDirectChatMessagesByChatId\n(dynamic chatId)"),(0,s.kt)("p",null,"This function is used to get all the chat messages of a particular chat by the user."),(0,s.kt)("p",null,"parameters required:"),(0,s.kt)("ul",null,(0,s.kt)("li",null,(0,s.kt)("code",null,"chatId")," - id of the direct chat.")),(0,s.kt)("h2",{id:"implementation"},"Implementation"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-dart"},"Future<void> getDirectChatMessagesByChatId(chatId) async {\n  // trigger graphQL query to get all the chat messages of a particular chat using [chatId].\n  final String query =\n      ChatQueries().fetchDirectChatMessagesByChatId(chatId as String);\n\n  final result = await _dbFunctions.gqlAuthQuery(query);\n\n  final messages = result.data['directChatsMessagesByChatID'] as List;\n\n  messages.forEach((message) {\n    final chatMessage = ChatMessage.fromJson(message as Map<String, dynamic>);\n    _chatMessageController.add(chatMessage);\n  });\n}\n")))}u.isMDXComponent=!0}}]);