"use strict";(self.webpackChunktalawa_docs=self.webpackChunktalawa_docs||[]).push([[57394],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>m});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=a.createContext({}),p=function(e){var t=a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},f="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),f=p(r),d=n,m=f["".concat(l,".").concat(d)]||f[d]||u[d]||o;return r?a.createElement(m,i(i({ref:t},c),{},{components:r})):a.createElement(m,i({ref:t},c))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[f]="string"==typeof e?e:n,i[1]=s;for(var p=2;p<o;p++)i[p]=r[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},5343:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var a=r(87462),n=(r(67294),r(3905));const o={},i="currentPlatform method",s={unversionedId:"talawa-mobile-docs/firebase_options/DefaultFirebaseOptions/currentPlatform",id:"talawa-mobile-docs/firebase_options/DefaultFirebaseOptions/currentPlatform",title:"currentPlatform method",description:"FirebaseOptions currentPlatform",source:"@site/docs/talawa-mobile-docs/firebase_options/DefaultFirebaseOptions/currentPlatform.md",sourceDirName:"talawa-mobile-docs/firebase_options/DefaultFirebaseOptions",slug:"/talawa-mobile-docs/firebase_options/DefaultFirebaseOptions/currentPlatform",permalink:"/docs/talawa-mobile-docs/firebase_options/DefaultFirebaseOptions/currentPlatform",draft:!1,editUrl:"https://github.com/PalisadoesFoundation/talawa-docs/edit/develop/docs/talawa-mobile-docs/firebase_options/DefaultFirebaseOptions/currentPlatform.md",tags:[],version:"current",frontMatter:{},sidebar:"Talawa",previous:{title:"android method",permalink:"/docs/talawa-mobile-docs/firebase_options/DefaultFirebaseOptions/android"},next:{title:"ios method",permalink:"/docs/talawa-mobile-docs/firebase_options/DefaultFirebaseOptions/ios"}},l={},p=[{value:"Implementation",id:"implementation",level:2}],c={toc:p},f="wrapper";function u(e){let{components:t,...r}=e;return(0,n.kt)(f,(0,a.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"currentplatform-method"},"currentPlatform method"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://pub.dev/documentation/firebase_core_platform_interface/4.8.0/firebase_core_platform_interface/FirebaseOptions-class.html"},"FirebaseOptions")," currentPlatform\n(",(0,n.kt)("a",{parentName:"p",href:"https://api.flutter.dev/flutter/dart-core/Map-class.html"},"Map"),"<",(0,n.kt)("a",{parentName:"p",href:"https://api.flutter.dev/flutter/dart-core/String-class.html"},"String"),", dynamic> androidFirebaseOptions, ",(0,n.kt)("a",{parentName:"p",href:"https://api.flutter.dev/flutter/dart-core/Map-class.html"},"Map"),"<",(0,n.kt)("a",{parentName:"p",href:"https://api.flutter.dev/flutter/dart-core/String-class.html"},"String"),", dynamic> iosFirebaseOptions)"),(0,n.kt)("p",null,"Builds and returns ",(0,n.kt)("a",{href:"https://pub.dev/documentation/firebase_core_platform_interface/4.8.0/firebase_core_platform_interface/FirebaseOptions-class.html"},"FirebaseOptions")," based on the current platform."),(0,n.kt)("p",null,"Switches on the current platform and calls ",(0,n.kt)("a",{href:"../../firebase_options/DefaultFirebaseOptions/android.md"},"android")," or ",(0,n.kt)("code",null,"iOS"),"methods accordingly to build the ",(0,n.kt)("a",{href:"https://pub.dev/documentation/firebase_core_platform_interface/4.8.0/firebase_core_platform_interface/FirebaseOptions-class.html"},"FirebaseOptions"),". Throws",(0,n.kt)("a",{href:"https://api.flutter.dev/flutter/dart-core/UnsupportedError-class.html"},"UnsupportedError")," if the platform is other than these two."),(0,n.kt)("p",null,(0,n.kt)("strong",null,"params"),":"),(0,n.kt)("ul",null,(0,n.kt)("li",null,(0,n.kt)("code",null,"androidFirebaseOptions"),": Firebase Options for Android"),(0,n.kt)("li",null,(0,n.kt)("code",null,"iosFirebaseOptions"),": Firebase Options for iOS")),(0,n.kt)("p",null,(0,n.kt)("strong",null,"returns"),":"),(0,n.kt)("ul",null,(0,n.kt)("li",null,(0,n.kt)("code",null,"FirebaseOptions"),": The ",(0,n.kt)("a",{href:"https://pub.dev/documentation/firebase_core_platform_interface/4.8.0/firebase_core_platform_interface/FirebaseOptions-class.html"},"FirebaseOptions")," built according to the platform.")),(0,n.kt)("h2",{id:"implementation"},"Implementation"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-dart"},"static FirebaseOptions currentPlatform(\n  Map<String, dynamic> androidFirebaseOptions,\n  Map<String, dynamic> iosFirebaseOptions,\n) {\n  if (kIsWeb) {\n    throw UnsupportedError(\n      'DefaultFirebaseOptions have not been configured for web - '\n      'you can reconfigure this by running the FlutterFire CLI again.',\n    );\n  }\n  switch (defaultTargetPlatform) {\n    case TargetPlatform.android:\n      return android(androidFirebaseOptions);\n    case TargetPlatform.iOS:\n      return ios(iosFirebaseOptions);\n    case TargetPlatform.macOS:\n      throw UnsupportedError(\n        'DefaultFirebaseOptions have not been configured for macos - '\n        'you can reconfigure this by running the FlutterFire CLI again.',\n      );\n    default:\n      throw UnsupportedError(\n        'DefaultFirebaseOptions are not supported for this platform.',\n      );\n  }\n}\n")))}u.isMDXComponent=!0}}]);