"use strict";(self.webpackChunktalawa_docs=self.webpackChunktalawa_docs||[]).push([[90444],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>k});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},s=Object.keys(e);for(a=0;a<s.length;a++)r=s[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)r=s[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=a.createContext({}),l=function(e){var t=a.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},u=function(e){var t=l(e.components);return a.createElement(c.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},v=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,s=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=l(r),v=n,k=p["".concat(c,".").concat(v)]||p[v]||d[v]||s;return r?a.createElement(k,o(o({ref:t},u),{},{components:r})):a.createElement(k,o({ref:t},u))}));function k(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var s=r.length,o=new Array(s);o[0]=v;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[p]="string"==typeof e?e:n,o[1]=i;for(var l=2;l<s;l++)o[l]=r[l];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}v.displayName="MDXCreateElement"},50341:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>s,metadata:()=>i,toc:()=>l});var a=r(87462),n=(r(67294),r(3905));const s={},o="getTasksForEvent method",i={unversionedId:"talawa-mobile-docs/services_task_service/TaskService/getTasksForEvent",id:"talawa-mobile-docs/services_task_service/TaskService/getTasksForEvent",title:"getTasksForEvent method",description:"Future&lt;void> getTasksForEvent",source:"@site/docs/talawa-mobile-docs/services_task_service/TaskService/getTasksForEvent.md",sourceDirName:"talawa-mobile-docs/services_task_service/TaskService",slug:"/talawa-mobile-docs/services_task_service/TaskService/getTasksForEvent",permalink:"/docs/talawa-mobile-docs/services_task_service/TaskService/getTasksForEvent",draft:!1,editUrl:"https://github.com/PalisadoesFoundation/talawa-docs/edit/develop/docs/talawa-mobile-docs/services_task_service/TaskService/getTasksForEvent.md",tags:[],version:"current",frontMatter:{},sidebar:"Talawa",previous:{title:"getTasksByUser method",permalink:"/docs/talawa-mobile-docs/services_task_service/TaskService/getTasksByUser"},next:{title:"tasks property",permalink:"/docs/talawa-mobile-docs/services_task_service/TaskService/tasks"}},c={},l=[{value:"Implementation",id:"implementation",level:2}],u={toc:l},p="wrapper";function d(e){let{components:t,...r}=e;return(0,n.kt)(p,(0,a.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"gettasksforevent-method"},"getTasksForEvent method"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://api.flutter.dev/flutter/dart-async/Future-class.html"},"Future"),"<","void> getTasksForEvent\n(",(0,n.kt)("a",{parentName:"p",href:"https://api.flutter.dev/flutter/dart-core/String-class.html"},"String")," eventId)"),(0,n.kt)("p",null,"This function is used to get all the tasks for the event."),(0,n.kt)("p",null,"params:"),(0,n.kt)("ul",null,(0,n.kt)("li",null,(0,n.kt)("code",null,"eventId")," : id of an event for which tasks need to fetched,")),(0,n.kt)("h2",{id:"implementation"},"Implementation"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-dart"},"Future<void> getTasksForEvent(String eventId) async {\n  await _databaseMutationFunctions\n      .refreshAccessToken(_userConfig.currentUser.refreshToken!);\n  final res = await _databaseMutationFunctions\n      .gqlNonAuthQuery(TaskQueries.eventTasks(eventId));\n\n  if (res != null) {\n    _tasks.clear();\n    final tasksList = res.data!['tasksByEvent'] as List;\n    tasksList.forEach((task) {\n      _tasks.add(Task.fromJson(task as Map<String, dynamic>));\n    });\n  }\n}\n")))}d.isMDXComponent=!0}}]);