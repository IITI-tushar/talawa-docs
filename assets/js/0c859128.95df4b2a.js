"use strict";(self.webpackChunktalawa_docs=self.webpackChunktalawa_docs||[]).push([[8621],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>m});var a=t(67294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},s=Object.keys(e);for(a=0;a<s.length;a++)t=s[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)t=s[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=a.createContext({}),c=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},u=function(e){var n=c(e.components);return a.createElement(l.Provider,{value:n},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},g=a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,s=e.originalType,l=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),p=c(t),g=i,m=p["".concat(l,".").concat(g)]||p[g]||d[g]||s;return t?a.createElement(m,r(r({ref:n},u),{},{components:t})):a.createElement(m,r({ref:n},u))}));function m(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var s=t.length,r=new Array(s);r[0]=g;var o={};for(var l in n)hasOwnProperty.call(n,l)&&(o[l]=n[l]);o.originalType=e,o[p]="string"==typeof e?e:i,r[1]=o;for(var c=2;c<s;c++)r[c]=t[c];return a.createElement.apply(null,r)}return a.createElement.apply(null,t)}g.displayName="MDXCreateElement"},2959:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>d,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var a=t(87462),i=(t(67294),t(3905));const s={},r="setUpFirebaseMessaging function",o={unversionedId:"talawa-mobile-docs/main/setUpFirebaseMessaging",id:"talawa-mobile-docs/main/setUpFirebaseMessaging",title:"setUpFirebaseMessaging function",description:"Future&lt;void> setUpFirebaseMessaging",source:"@site/docs/talawa-mobile-docs/main/setUpFirebaseMessaging.md",sourceDirName:"talawa-mobile-docs/main",slug:"/talawa-mobile-docs/main/setUpFirebaseMessaging",permalink:"/docs/talawa-mobile-docs/main/setUpFirebaseMessaging",draft:!1,editUrl:"https://github.com/PalisadoesFoundation/talawa-docs/edit/develop/docs/talawa-mobile-docs/main/setUpFirebaseMessaging.md",tags:[],version:"current",frontMatter:{},sidebar:"Talawa",previous:{title:"setUpFirebaseKeys function",permalink:"/docs/talawa-mobile-docs/main/setUpFirebaseKeys"},next:{title:"ChatListTileDataModel constructor",permalink:"/docs/talawa-mobile-docs/models_chats_chat_list_tile_data_model/ChatListTileDataModel/"}},l={},c=[{value:"Implementation",id:"implementation",level:2}],u={toc:c},p="wrapper";function d(e){let{components:n,...t}=e;return(0,i.kt)(p,(0,a.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"setupfirebasemessaging-function"},"setUpFirebaseMessaging function"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://api.flutter.dev/flutter/dart-async/Future-class.html"},"Future"),"<","void> setUpFirebaseMessaging\n()"),(0,i.kt)("p",null,"Set up firebase instance, enbables messaging,listens to icoming messages."),(0,i.kt)("p",null,(0,i.kt)("strong",null,"params"),": None"),(0,i.kt)("p",null,(0,i.kt)("strong",null,"returns"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",null,(0,i.kt)("code",null,"Future<void>"),": promise that will be fulfilled Firebase is setted up.")),(0,i.kt)("h2",{id:"implementation"},"Implementation"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-dart"},"Future<void> setUpFirebaseMessaging() async {\n  /// Set the background messaging handler early on, as a named top-level function\n  FirebaseMessaging.onBackgroundMessage(_firebaseMessagingBackgroundHandler);\n\n  // Update the iOS foreground notification presentation options to allow heads up notifications.\n  await FirebaseMessaging.instance.setForegroundNotificationPresentationOptions(\n    alert: true,\n    badge: true,\n    sound: true,\n  );\n\n  FirebaseMessaging.instance\n      .getInitialMessage()\n      .then((RemoteMessage? message) {});\n\n  FirebaseMessaging.onMessage.listen((RemoteMessage message) {\n    final RemoteNotification? notification = message.notification;\n    final AndroidNotification? android = message.notification?.android;\n    if (notification != null && android != null && !kIsWeb) {\n      flutterLocalNotificationsPlugin.show(\n        notification.hashCode,\n        notification.title,\n        notification.body,\n        NotificationDetails(\n          android: AndroidNotificationDetails(\n            channel.id,\n            channel.name,\n            channelDescription: channel.description,\n            icon: 'launch_background',\n          ),\n        ),\n      );\n    }\n  });\n\n  FirebaseMessaging.onMessageOpenedApp.listen((RemoteMessage message) {});\n}\n")))}d.isMDXComponent=!0}}]);