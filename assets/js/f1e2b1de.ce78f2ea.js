"use strict";(self.webpackChunktalawa_docs=self.webpackChunktalawa_docs||[]).push([[745807],{638956:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"talawa-api-docs/resolvers/Organization/userTags/variables/userTags","title":"userTags","description":"talawa-api","source":"@site/docs/talawa-api-docs/resolvers/Organization/userTags/variables/userTags.md","sourceDirName":"talawa-api-docs/resolvers/Organization/userTags/variables","slug":"/talawa-api-docs/resolvers/Organization/userTags/variables/userTags","permalink":"/docs/talawa-api-docs/resolvers/Organization/userTags/variables/userTags","draft":false,"unlisted":false,"editUrl":"https://github.com/PalisadoesFoundation/talawa-docs/edit/develop/docs/talawa-api-docs/resolvers/Organization/userTags/variables/userTags.md","tags":[],"version":"current","frontMatter":{}}');var r=n(474848),t=n(28453);const i={},o=void 0,l={},c=[{value:"Param",id:"param",level:2},{value:"Param",id:"param-1",level:2},{value:"Returns",id:"returns",level:2},{value:"See",id:"see",level:2},{value:"Defined in",id:"defined-in",level:2}];function d(e){const a={a:"a",code:"code",h1:"h1",h2:"h2",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(a.p,{children:(0,r.jsx)(a.a,{href:"/docs/talawa-api-docs/",children:(0,r.jsx)(a.strong,{children:"talawa-api"})})}),"\n",(0,r.jsx)(a.hr,{}),"\n",(0,r.jsxs)(a.p,{children:[(0,r.jsx)(a.a,{href:"/docs/talawa-api-docs/modules",children:"talawa-api"})," / ",(0,r.jsx)(a.a,{href:"/docs/talawa-api-docs/resolvers/Organization/userTags/",children:"resolvers/Organization/userTags"})," / userTags"]}),"\n",(0,r.jsx)(a.h1,{id:"variable-usertags",children:"Variable: userTags"}),"\n",(0,r.jsxs)(a.p,{children:["> ",(0,r.jsx)(a.code,{children:"const"})," ",(0,r.jsx)(a.strong,{children:"userTags"}),": ",(0,r.jsx)(a.a,{href:"/docs/talawa-api-docs/types/generatedGraphQLTypes/type-aliases/OrganizationResolvers",children:(0,r.jsx)(a.code,{children:"OrganizationResolvers"})}),"[",(0,r.jsx)(a.code,{children:'"userTags"'}),"]"]}),"\n",(0,r.jsxs)(a.p,{children:["Resolver function for the ",(0,r.jsx)(a.code,{children:"userTags"})," field of an ",(0,r.jsx)(a.code,{children:"Organization"}),"."]}),"\n",(0,r.jsxs)(a.p,{children:["This resolver is used to resolve the ",(0,r.jsx)(a.code,{children:"userTags"})," field of an ",(0,r.jsx)(a.code,{children:"Organization"})," type."]}),"\n",(0,r.jsx)(a.h2,{id:"param",children:"Param"}),"\n",(0,r.jsx)(a.p,{children:"The parent object representing the organization. It contains information about the organization, including the ID of the organization."}),"\n",(0,r.jsx)(a.h2,{id:"param-1",children:"Param"}),"\n",(0,r.jsx)(a.p,{children:"The arguments provided to the field. These arguments are used to filter, sort, and paginate the user tags."}),"\n",(0,r.jsx)(a.h2,{id:"returns",children:"Returns"}),"\n",(0,r.jsx)(a.p,{children:"A promise that resolves to a connection object containing the user tags of the organization."}),"\n",(0,r.jsx)(a.h2,{id:"see",children:"See"}),"\n",(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsx)(a.li,{children:"OrganizationTagUser - The OrganizationTagUser model used to interact with the user tags collection in the database."}),"\n",(0,r.jsx)(a.li,{children:"parseGraphQLConnectionArguments - The function used to parse the GraphQL connection arguments (filter, sort, pagination)."}),"\n",(0,r.jsx)(a.li,{children:"transformToDefaultGraphQLConnection - The function used to transform the list of user tags into a connection object."}),"\n",(0,r.jsx)(a.li,{children:"getCommonGraphQLConnectionFilter - The function used to get the common filter object for the GraphQL connection."}),"\n",(0,r.jsx)(a.li,{children:"getCommonGraphQLConnectionSort - The function used to get the common sort object for the GraphQL connection."}),"\n",(0,r.jsx)(a.li,{children:"MAXIMUM_FETCH_LIMIT - The maximum number of user tags that can be fetched in a single request."}),"\n",(0,r.jsx)(a.li,{children:"GraphQLError - The error class used to throw GraphQL errors."}),"\n",(0,r.jsx)(a.li,{children:"OrganizationResolvers - The type definition for the resolvers of the Organization fields."}),"\n"]}),"\n",(0,r.jsx)(a.h2,{id:"defined-in",children:"Defined in"}),"\n",(0,r.jsx)(a.p,{children:(0,r.jsx)(a.a,{href:"https://github.com/PalisadoesFoundation/talawa-api/blob/5c5b29a0ea487bda8306089fe128f43f3be29f94/src/resolvers/Organization/userTags.ts#L40",children:"src/resolvers/Organization/userTags.ts:40"})})]})}function h(e={}){const{wrapper:a}={...(0,t.R)(),...e.components};return a?(0,r.jsx)(a,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},28453:(e,a,n)=>{n.d(a,{R:()=>i,x:()=>o});var s=n(296540);const r={},t=s.createContext(r);function i(e){const a=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function o(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(t.Provider,{value:a},e.children)}}}]);