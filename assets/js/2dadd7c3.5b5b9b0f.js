"use strict";(self.webpackChunktalawa_docs=self.webpackChunktalawa_docs||[]).push([[90382],{3905:(t,e,a)=>{a.d(e,{Zo:()=>c,kt:()=>v});var r=a(67294);function n(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function i(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,r)}return a}function l(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?i(Object(a),!0).forEach((function(e){n(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function o(t,e){if(null==t)return{};var a,r,n=function(t,e){if(null==t)return{};var a,r,n={},i=Object.keys(t);for(r=0;r<i.length;r++)a=i[r],e.indexOf(a)>=0||(n[a]=t[a]);return n}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(r=0;r<i.length;r++)a=i[r],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(n[a]=t[a])}return n}var s=r.createContext({}),d=function(t){var e=r.useContext(s),a=e;return t&&(a="function"==typeof t?t(e):l(l({},e),t)),a},c=function(t){var e=d(t.components);return r.createElement(s.Provider,{value:e},t.children)},m="mdxType",u={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},p=r.forwardRef((function(t,e){var a=t.components,n=t.mdxType,i=t.originalType,s=t.parentName,c=o(t,["components","mdxType","originalType","parentName"]),m=d(a),p=n,v=m["".concat(s,".").concat(p)]||m[p]||u[p]||i;return a?r.createElement(v,l(l({ref:e},c),{},{components:a})):r.createElement(v,l({ref:e},c))}));function v(t,e){var a=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var i=a.length,l=new Array(i);l[0]=p;var o={};for(var s in e)hasOwnProperty.call(e,s)&&(o[s]=e[s]);o.originalType=t,o[m]="string"==typeof t?t:n,l[1]=o;for(var d=2;d<i;d++)l[d]=a[d];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}p.displayName="MDXCreateElement"},66198:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var r=a(87462),n=(a(67294),a(3905));const i={},l="validateFirstName method",o={unversionedId:"talawa-mobile-docs/utils_validators/Validator/validateFirstName",id:"talawa-mobile-docs/utils_validators/Validator/validateFirstName",title:"validateFirstName method",description:"String? validateFirstName",source:"@site/docs/talawa-mobile-docs/utils_validators/Validator/validateFirstName.md",sourceDirName:"talawa-mobile-docs/utils_validators/Validator",slug:"/talawa-mobile-docs/utils_validators/Validator/validateFirstName",permalink:"/docs/talawa-mobile-docs/utils_validators/Validator/validateFirstName",draft:!1,editUrl:"https://github.com/PalisadoesFoundation/talawa-docs/edit/develop/docs/talawa-mobile-docs/utils_validators/Validator/validateFirstName.md",tags:[],version:"current",frontMatter:{},sidebar:"Talawa",previous:{title:"validateEventForm method",permalink:"/docs/talawa-mobile-docs/utils_validators/Validator/validateEventForm"},next:{title:"validateLastName method",permalink:"/docs/talawa-mobile-docs/utils_validators/Validator/validateLastName"}},s={},d=[{value:"Implementation",id:"implementation",level:2}],c={toc:d},m="wrapper";function u(t){let{components:e,...a}=t;return(0,n.kt)(m,(0,r.Z)({},c,a,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"validatefirstname-method"},"validateFirstName method"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://api.flutter.dev/flutter/dart-core/String-class.html"},"String"),"? validateFirstName\n(",(0,n.kt)("a",{parentName:"p",href:"https://api.flutter.dev/flutter/dart-core/String-class.html"},"String")," value)"),(0,n.kt)("h2",{id:"implementation"},"Implementation"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-dart"},"static String? validateFirstName(String value) {\n  if (value.isEmpty) {\n    return 'Firstname must not be left blank.';\n  }\n  // ignore: unnecessary_raw_strings\n  const String pattern = r'(?=.*?[A-Za-z]).+';\n  final RegExp regex = RegExp(pattern);\n  if (!regex.hasMatch(value)) {\n    return \"Invalid Firstname\";\n  }\n  return null;\n}\n")))}u.isMDXComponent=!0}}]);