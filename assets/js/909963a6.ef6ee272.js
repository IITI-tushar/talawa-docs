"use strict";(self.webpackChunktalawa_docs=self.webpackChunktalawa_docs||[]).push([[83103],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>f});var o=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function n(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,o,a=function(e,t){if(null==e)return{};var r,o,a={},l=Object.keys(e);for(o=0;o<l.length;o++)r=l[o],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(o=0;o<l.length;o++)r=l[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var i=o.createContext({}),u=function(e){var t=o.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):n(n({},t),e)),r},d=function(e){var t=u(e.components);return o.createElement(i.Provider,{value:t},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var r=e.components,a=e.mdxType,l=e.originalType,i=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),c=u(r),m=a,f=c["".concat(i,".").concat(m)]||c[m]||p[m]||l;return r?o.createElement(f,n(n({ref:t},d),{},{components:r})):o.createElement(f,n({ref:t},d))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=r.length,n=new Array(l);n[0]=m;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[c]="string"==typeof e?e:a,n[1]=s;for(var u=2;u<l;u++)n[u]=r[u];return o.createElement.apply(null,n)}return o.createElement.apply(null,r)}m.displayName="MDXCreateElement"},95077:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>n,default:()=>p,frontMatter:()=>l,metadata:()=>s,toc:()=>u});var o=r(87462),a=(r(67294),r(3905));const l={},n="operator == method",s={unversionedId:"talawa-mobile-docs/models_user_user_info/UserAdapter/operator_equals",id:"talawa-mobile-docs/models_user_user_info/UserAdapter/operator_equals",title:"operator == method",description:"- @override",source:"@site/docs/talawa-mobile-docs/models_user_user_info/UserAdapter/operator_equals.md",sourceDirName:"talawa-mobile-docs/models_user_user_info/UserAdapter",slug:"/talawa-mobile-docs/models_user_user_info/UserAdapter/operator_equals",permalink:"/docs/talawa-mobile-docs/models_user_user_info/UserAdapter/operator_equals",draft:!1,editUrl:"https://github.com/PalisadoesFoundation/talawa-docs/edit/develop/docs/talawa-mobile-docs/models_user_user_info/UserAdapter/operator_equals.md",tags:[],version:"current",frontMatter:{},sidebar:"Talawa",previous:{title:"hashCode property",permalink:"/docs/talawa-mobile-docs/models_user_user_info/UserAdapter/hashCode"},next:{title:"read method",permalink:"/docs/talawa-mobile-docs/models_user_user_info/UserAdapter/read"}},i={},u=[{value:"Implementation",id:"implementation",level:2}],d={toc:u},c="wrapper";function p(e){let{components:t,...r}=e;return(0,a.kt)(c,(0,o.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"operator--method"},"operator == method"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"@",(0,a.kt)("a",{parentName:"li",href:"https://api.flutter.dev/flutter/dart-core/override-constant.html"},"override"))),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://api.flutter.dev/flutter/dart-core/bool-class.html"},"bool")," operator ==\n(",(0,a.kt)("a",{parentName:"p",href:"https://api.flutter.dev/flutter/dart-core/Object-class.html"},"Object")," other)"),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},(0,a.kt)("span",{class:"feature"},"override"))),(0,a.kt)("p",null,"The equality operator."),(0,a.kt)("p",null,"The default behavior for all ",(0,a.kt)("a",{href:"https://api.flutter.dev/flutter/dart-core/Object-class.html"},"Object"),"s is to return true if and only if this object and ",(0,a.kt)("code",null,"other")," are the same object."),(0,a.kt)("p",null,"Override this method to specify a different equality relation on a class. The overriding method must still be an equivalence relation. That is, it must be:"),(0,a.kt)("ul",null,(0,a.kt)("li",null,(0,a.kt)("p",null,"Total: It must return a boolean for all arguments. It should never throw.")),(0,a.kt)("li",null,(0,a.kt)("p",null,"Reflexive: For all objects ",(0,a.kt)("code",null,"o"),", ",(0,a.kt)("code",null,"o == o")," must be true.")),(0,a.kt)("li",null,(0,a.kt)("p",null,"Symmetric: For all objects ",(0,a.kt)("code",null,"o1")," and ",(0,a.kt)("code",null,"o2"),", ",(0,a.kt)("code",null,"o1 == o2")," and ",(0,a.kt)("code",null,"o2 == o1")," must either both be true, or both be false.")),(0,a.kt)("li",null,(0,a.kt)("p",null,"Transitive: For all objects ",(0,a.kt)("code",null,"o1"),", ",(0,a.kt)("code",null,"o2"),", and ",(0,a.kt)("code",null,"o3"),", if ",(0,a.kt)("code",null,"o1 == o2")," and",(0,a.kt)("code",null,"o2 == o3")," are true, then ",(0,a.kt)("code",null,"o1 == o3")," must be true."))),(0,a.kt)("p",null,"The method should also be consistent over time, so whether two objects are equal should only change if at least one of the objects was modified."),(0,a.kt)("p",null,"If a subclass overrides the equality operator, it should override the ",(0,a.kt)("a",{href:"../../models_user_user_info/UserAdapter/hashCode.md"},"hashCode")," method as well to maintain consistency."),(0,a.kt)("h2",{id:"implementation"},"Implementation"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-dart"},"@override\nbool operator ==(Object other) =>\n    identical(this, other) ||\n    other is UserAdapter &&\n        runtimeType == other.runtimeType &&\n        typeId == other.typeId;\n")))}p.isMDXComponent=!0}}]);