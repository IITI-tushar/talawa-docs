"use strict";(self.webpackChunktalawa_docs=self.webpackChunktalawa_docs||[]).push([[94690],{25183:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>l,frontMatter:()=>r,metadata:()=>c,toc:()=>d});var a=s(85893),n=s(11151);const r={},i="sendMessageToDirectChat method",c={id:"talawa-mobile-docs/services_chat_service/ChatService/sendMessageToDirectChat",title:"sendMessageToDirectChat method",description:"Future&lt;void> sendMessageToDirectChat",source:"@site/docs/talawa-mobile-docs/services_chat_service/ChatService/sendMessageToDirectChat.md",sourceDirName:"talawa-mobile-docs/services_chat_service/ChatService",slug:"/talawa-mobile-docs/services_chat_service/ChatService/sendMessageToDirectChat",permalink:"/docs/talawa-mobile-docs/services_chat_service/ChatService/sendMessageToDirectChat",draft:!1,unlisted:!1,editUrl:"https://github.com/PalisadoesFoundation/talawa-docs/edit/develop/docs/talawa-mobile-docs/services_chat_service/ChatService/sendMessageToDirectChat.md",tags:[],version:"current",frontMatter:{},sidebar:"Talawa",previous:{title:"getDirectChatsByUserId method",permalink:"/docs/talawa-mobile-docs/services_chat_service/ChatService/getDirectChatsByUserId"},next:{title:"ChatService class",permalink:"/docs/talawa-mobile-docs/services_chat_service/ChatService-class"}},o={},d=[{value:"Implementation",id:"implementation",level:2}];function h(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,n.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h1,{id:"sendmessagetodirectchat-method",children:"sendMessageToDirectChat method"}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.a,{href:"https://api.flutter.dev/flutter/dart-async/Future-class.html",children:"Future"}),"<void> sendMessageToDirectChat\n(",(0,a.jsx)(t.a,{href:"https://api.flutter.dev/flutter/dart-core/String-class.html",children:"String"})," chatId, ",(0,a.jsx)(t.a,{href:"https://api.flutter.dev/flutter/dart-core/String-class.html",children:"String"})," messageContent)"]}),"\n",(0,a.jsx)("p",{children:"This function is used to send the message in the direct chats."}),"\n",(0,a.jsx)("p",{children:"parameters required:"}),"\n",(0,a.jsxs)("ul",{children:[(0,a.jsxs)("li",{children:[(0,a.jsx)("code",{children:"chatId"})," - id of the direct chat where message need to be send."]}),(0,a.jsxs)("li",{children:[(0,a.jsx)("code",{children:"messageContent"})," - the text that need to be send."]})]}),"\n",(0,a.jsx)(t.h2,{id:"implementation",children:"Implementation"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-dart",children:'Future<void> sendMessageToDirectChat(\n  String chatId,\n  String messageContent,\n) async {\n  // trigger graphQL mutation to push the message in the Database.\n  final result = await _dbFunctions.gqlAuthMutation(\n    ChatQueries().sendMessageToDirectChat(),\n    variables: {"chatId": chatId, "messageContent": messageContent},\n  );\n\n  final message = ChatMessage.fromJson(\n    result.data[\'sendMessageToDirectChat\'] as Map<String, dynamic>,\n  );\n\n  _chatMessageController.add(message);\n\n  debugPrint(result.data.toString());\n}\n'})})]})}function l(e={}){const{wrapper:t}={...(0,n.a)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}},11151:(e,t,s)=>{s.d(t,{Z:()=>c,a:()=>i});var a=s(67294);const n={},r=a.createContext(n);function i(e){const t=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),a.createElement(r.Provider,{value:t},e.children)}}}]);