"use strict";(self.webpackChunktalawa_docs=self.webpackChunktalawa_docs||[]).push([[30110],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>m});var i=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,i,a=function(e,n){if(null==e)return{};var t,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=i.createContext({}),u=function(e){var n=i.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},d=function(e){var n=u(e.components);return i.createElement(l.Provider,{value:n},e.children)},p="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},g=i.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),p=u(t),g=a,m=p["".concat(l,".").concat(g)]||p[g]||c[g]||r;return t?i.createElement(m,o(o({ref:n},d),{},{components:t})):i.createElement(m,o({ref:n},d))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,o=new Array(r);o[0]=g;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[p]="string"==typeof e?e:a,o[1]=s;for(var u=2;u<r;u++)o[u]=t[u];return i.createElement.apply(null,o)}return i.createElement.apply(null,t)}g.displayName="MDXCreateElement"},37642:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>c,frontMatter:()=>r,metadata:()=>s,toc:()=>u});var i=t(87462),a=(t(67294),t(3905));const r={},o="signUp method",s={unversionedId:"talawa-mobile-docs/view_model_pre_auth_view_models_signup_details_view_model/SignupDetailsViewModel/signUp",id:"talawa-mobile-docs/view_model_pre_auth_view_models_signup_details_view_model/SignupDetailsViewModel/signUp",title:"signUp method",description:"Future&lt;void> signUp",source:"@site/docs/talawa-mobile-docs/view_model_pre_auth_view_models_signup_details_view_model/SignupDetailsViewModel/signUp.md",sourceDirName:"talawa-mobile-docs/view_model_pre_auth_view_models_signup_details_view_model/SignupDetailsViewModel",slug:"/talawa-mobile-docs/view_model_pre_auth_view_models_signup_details_view_model/SignupDetailsViewModel/signUp",permalink:"/docs/talawa-mobile-docs/view_model_pre_auth_view_models_signup_details_view_model/SignupDetailsViewModel/signUp",draft:!1,editUrl:"https://github.com/PalisadoesFoundation/talawa-docs/edit/develop/docs/talawa-mobile-docs/view_model_pre_auth_view_models_signup_details_view_model/SignupDetailsViewModel/signUp.md",tags:[],version:"current",frontMatter:{},sidebar:"Talawa",previous:{title:"selectedOrganization property",permalink:"/docs/talawa-mobile-docs/view_model_pre_auth_view_models_signup_details_view_model/SignupDetailsViewModel/selectedOrganization"},next:{title:"validate property",permalink:"/docs/talawa-mobile-docs/view_model_pre_auth_view_models_signup_details_view_model/SignupDetailsViewModel/validate"}},l={},u=[{value:"Implementation",id:"implementation",level:2}],d={toc:u},p="wrapper";function c(e){let{components:n,...t}=e;return(0,a.kt)(p,(0,i.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"signup-method"},"signUp method"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://api.flutter.dev/flutter/dart-async/Future-class.html"},"Future"),"<","void> signUp\n()"),(0,a.kt)("p",null,"This function is used to sign up the user into the application by passing the data to database query. The function uses ",(0,a.kt)("code",null,"gqlNonAuthMutation")," method provided by ",(0,a.kt)("code",null,"databaseFunctions")," services."),(0,a.kt)("h2",{id:"implementation"},"Implementation"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-dart"},"Future<void> signUp() async {\n  FocusScope.of(navigationService.navigatorKey.currentContext!).unfocus();\n  setState(ViewState.busy);\n  validate = AutovalidateMode.always;\n  setState(ViewState.idle);\n  if (formKey.currentState!.validate()) {\n    validate = AutovalidateMode.disabled;\n    navigationService\n        .pushDialog(const CustomProgressDialog(key: Key('SignUpProgress')));\n    databaseFunctions.init();\n    try {\n      final result = await databaseFunctions.gqlNonAuthMutation(\n        queries.registerUser(\n          firstName.text,\n          lastName.text,\n          email.text,\n          password.text,\n        ),\n      );\n      navigationService.pop();\n      if (result != null) {\n        final User signedInUser =\n            User.fromJson(result.data!['signUp'] as Map<String, dynamic>);\n        final bool userSaved = await userConfig.updateUser(signedInUser);\n        final bool tokenRefreshed = await graphqlConfig.getToken() as bool;\n        // if user successfully saved and access token is also generated.\n        if (userSaved && tokenRefreshed) {\n          // if the selected organization is public.\n          if (selectedOrganization.isPublic!) {\n            try {\n              final QueryResult result =\n                  await databaseFunctions.gqlAuthMutation(\n                queries.joinOrgById(selectedOrganization.id!),\n              ) as QueryResult;\n\n              final List<OrgInfo>? joinedOrg = (result\n                          .data!['joinPublicOrganization']\n                      ['joinedOrganizations'] as List<dynamic>?)\n                  ?.map((e) => OrgInfo.fromJson(e as Map<String, dynamic>))\n                  .toList();\n              userConfig.updateUserJoinedOrg(joinedOrg!);\n              userConfig.saveCurrentOrgInHive(\n                userConfig.currentUser.joinedOrganizations![0],\n              );\n              navigationService.removeAllAndPush(\n                Routes.mainScreen,\n                Routes.splashScreen,\n                arguments:\n                    MainScreenArgs(mainScreenIndex: 0, fromSignUp: true),\n              );\n            } on Exception catch (e) {\n              print(e);\n              navigationService.showTalawaErrorSnackBar(\n                'SomeThing went wrong',\n                MessageType.error,\n              );\n            }\n          } else {\n            try {\n              final QueryResult result =\n                  await databaseFunctions.gqlAuthMutation(\n                queries.sendMembershipRequest(selectedOrganization.id!),\n              ) as QueryResult;\n\n              final OrgInfo membershipRequest = OrgInfo.fromJson(\n                result.data!['sendMembershipRequest']['organization']\n                    as Map<String, dynamic>,\n              );\n              userConfig.updateUserMemberRequestOrg([membershipRequest]);\n              navigationService.pop();\n              navigationService.removeAllAndPush(\n                Routes.waitingScreen,\n                Routes.splashScreen,\n              );\n            } on Exception catch (e) {\n              print(e);\n              navigationService.showTalawaErrorSnackBar(\n                'SomeThing went wrong',\n                MessageType.error,\n              );\n            }\n          }\n        }\n      }\n    } on Exception catch (e) {\n      print(e);\n      navigationService.showTalawaErrorSnackBar(\n        'SomeThing went wrong',\n        MessageType.error,\n      );\n    }\n  }\n}\n")))}c.isMDXComponent=!0}}]);