"use strict";(self.webpackChunktalawa_docs=self.webpackChunktalawa_docs||[]).push([[81546],{3905:(e,t,r)=>{r.d(t,{Zo:()=>m,kt:()=>d});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},m=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},u="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),u=c(r),p=a,d=u["".concat(l,".").concat(p)]||u[p]||g[p]||i;return r?n.createElement(d,s(s({ref:t},m),{},{components:r})):n.createElement(d,s({ref:t},m))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,s=new Array(i);s[0]=p;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[u]="string"==typeof e?e:a,s[1]=o;for(var c=2;c<i;c++)s[c]=r[c];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},11347:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>g,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var n=r(87462),a=(r(67294),r(3905));const i={},s="getOrgMembersList method",o={unversionedId:"talawa-mobile-docs/services_org_service/OrganizationService/getOrgMembersList",id:"talawa-mobile-docs/services_org_service/OrganizationService/getOrgMembersList",title:"getOrgMembersList method",description:"Future&lt;List&lt;User>> getOrgMembersList",source:"@site/docs/talawa-mobile-docs/services_org_service/OrganizationService/getOrgMembersList.md",sourceDirName:"talawa-mobile-docs/services_org_service/OrganizationService",slug:"/talawa-mobile-docs/services_org_service/OrganizationService/getOrgMembersList",permalink:"/docs/talawa-mobile-docs/services_org_service/OrganizationService/getOrgMembersList",draft:!1,editUrl:"https://github.com/PalisadoesFoundation/talawa-docs/edit/develop/docs/talawa-mobile-docs/services_org_service/OrganizationService/getOrgMembersList.md",tags:[],version:"current",frontMatter:{},sidebar:"Talawa",previous:{title:"OrganizationService constructor",permalink:"/docs/talawa-mobile-docs/services_org_service/OrganizationService/"},next:{title:"OrganizationService class",permalink:"/docs/talawa-mobile-docs/services_org_service/OrganizationService-class"}},l={},c=[{value:"Implementation",id:"implementation",level:2}],m={toc:c},u="wrapper";function g(e){let{components:t,...r}=e;return(0,a.kt)(u,(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"getorgmemberslist-method"},"getOrgMembersList method"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://api.flutter.dev/flutter/dart-async/Future-class.html"},"Future"),"<",(0,a.kt)("a",{parentName:"p",href:"https://api.flutter.dev/flutter/dart-core/List-class.html"},"List"),"<",(0,a.kt)("a",{parentName:"p",href:"/docs/talawa-mobile-docs/models_user_user_info/User-class"},"User"),">> getOrgMembersList\n(",(0,a.kt)("a",{parentName:"p",href:"https://api.flutter.dev/flutter/dart-core/String-class.html"},"String")," orgId)"),(0,a.kt)("p",null,"This function fetch and returns the list of organization members."),(0,a.kt)("p",null,"params:"),(0,a.kt)("ul",null,(0,a.kt)("li",null,(0,a.kt)("code",null,"orgId")," : id of the organization for which members list need be fetched.")),(0,a.kt)("h2",{id:"implementation"},"Implementation"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-dart"},"Future<List<User>> getOrgMembersList(String orgId) async {\n  final String query = Queries().fetchOrgDetailsById(orgId);\n  // fetching from database using graphQL mutations.\n  final result = await _dbFunctions.gqlAuthMutation(query);\n  final List orgMembersResult =\n      result.data['organizations'][0]['members'] as List;\n  final List<User> orgMembersList = [];\n  orgMembersResult.forEach((jsonElement) {\n    final User member =\n        User.fromJson(jsonElement as Map<String, dynamic>, fromOrg: true);\n    orgMembersList.add(member);\n  });\n\n  // return list\n  return orgMembersList;\n}\n")))}g.isMDXComponent=!0}}]);