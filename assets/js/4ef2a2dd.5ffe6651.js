"use strict";(self.webpackChunktalawa_docs=self.webpackChunktalawa_docs||[]).push([[98077],{45413:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>l,contentTitle:()=>o,default:()=>c,frontMatter:()=>s,metadata:()=>u,toc:()=>d});var t=n(85893),r=n(11151);const s={},o="userLanguageQuery method",u={id:"talawa-mobile-docs/view_model_lang_view_model/AppLanguage/userLanguageQuery",title:"userLanguageQuery method",description:"Future&lt;void\\> userLanguageQuery",source:"@site/docs/talawa-mobile-docs/view_model_lang_view_model/AppLanguage/userLanguageQuery.md",sourceDirName:"talawa-mobile-docs/view_model_lang_view_model/AppLanguage",slug:"/talawa-mobile-docs/view_model_lang_view_model/AppLanguage/userLanguageQuery",permalink:"/docs/talawa-mobile-docs/view_model_lang_view_model/AppLanguage/userLanguageQuery",draft:!1,unlisted:!1,editUrl:"https://github.com/PalisadoesFoundation/talawa-docs/edit/develop/docs/talawa-mobile-docs/view_model_lang_view_model/AppLanguage/userLanguageQuery.md",tags:[],version:"current",frontMatter:{},sidebar:"Talawa",previous:{title:"selectLanguagePress method",permalink:"/docs/talawa-mobile-docs/view_model_lang_view_model/AppLanguage/selectLanguagePress"},next:{title:"AppLanguage class",permalink:"/docs/talawa-mobile-docs/view_model_lang_view_model/AppLanguage-class"}},l={},d=[{value:"Implementation",id:"implementation",level:2}];function i(e){const a={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,r.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(a.header,{children:(0,t.jsx)(a.h1,{id:"userlanguagequery-method",children:"userLanguageQuery method"})}),"\n",(0,t.jsxs)(a.p,{children:[(0,t.jsx)(a.a,{href:"https:api.flutter.dev/flutter/dart-async/Future-class.html",children:"Future"}),"<void> userLanguageQuery\n(",(0,t.jsx)(a.a,{href:"https:api.flutter.dev/flutter/dart-core/String-class.html",children:"String"})," userId)"]}),"\n",(0,t.jsx)(a.p,{children:"<p>This function perform graphQL query to check the user's language in the database.\nThe function uses <code>gqlAuthQuery</code> method provided by Database Functions Services.</p>\n<p>params:</p>\n<ul>\n<li><code>userId</code> : user for which language need to be fetch.</li>\n</ul>"}),"\n",(0,t.jsx)(a.h2,{id:"implementation",children:"Implementation"}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-dart",children:"Future\\<void\\> userLanguageQuery(String userId) async \\{\n  try \\{\n    await databaseFunctions.gqlAuthQuery(queries.newUserLanguage(userId));\n  \\} catch (e) \\{\n    print(e);\n  \\}\n\\}\n"})})]})}function c(e={}){const{wrapper:a}={...(0,r.a)(),...e.components};return a?(0,t.jsx)(a,{...e,children:(0,t.jsx)(i,{...e})}):i(e)}},11151:(e,a,n)=>{n.d(a,{Z:()=>u,a:()=>o});var t=n(67294);const r={},s=t.createContext(r);function o(e){const a=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function u(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),t.createElement(s.Provider,{value:a},e.children)}}}]);