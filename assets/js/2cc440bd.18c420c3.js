"use strict";(self.webpackChunktalawa_docs=self.webpackChunktalawa_docs||[]).push([[106253],{134733:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>i,contentTitle:()=>n,default:()=>h,frontMatter:()=>c,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"talawa-mobile-docs/views_pre_auth_screens_recover/Recover/createState","title":"createState method","description":"- @override","source":"@site/docs/talawa-mobile-docs/views_pre_auth_screens_recover/Recover/createState.md","sourceDirName":"talawa-mobile-docs/views_pre_auth_screens_recover/Recover","slug":"/talawa-mobile-docs/views_pre_auth_screens_recover/Recover/createState","permalink":"/docs/talawa-mobile-docs/views_pre_auth_screens_recover/Recover/createState","draft":false,"unlisted":false,"editUrl":"https://github.com/PalisadoesFoundation/talawa-docs/edit/develop/docs/talawa-mobile-docs/views_pre_auth_screens_recover/Recover/createState.md","tags":[],"version":"current","frontMatter":{},"sidebar":"Talawa","previous":{"title":"Recover constructor","permalink":"/docs/talawa-mobile-docs/views_pre_auth_screens_recover/Recover/"},"next":{"title":"Recover class","permalink":"/docs/talawa-mobile-docs/views_pre_auth_screens_recover/Recover-class"}}');var s=a(474848),o=a(28453);const c={},n="createState method",i={},l=[{value:"Implementation",id:"implementation",level:2}];function d(e){const t={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"createstate-method",children:"createState method"})}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["@",(0,s.jsx)(t.a,{href:"https:api.flutter.dev/flutter/dart-core/override-constant.html",children:"override"})]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"_RecoverState createState\n()"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.em,{children:'<span class="feature">override</span>'})}),"\n",(0,s.jsxs)(t.p,{children:['<p>Creates the mutable state for this widget at a given location in the tree.</p>\n<p>Subclasses should override this method to return a newly created\ninstance of their associated <a href="https',":api",'.flutter.dev/flutter/widgets/State-class.html">State</a> subclass:</p>\n<pre class="language-dart"><code class="language-dart">@override\nState<SomeWidget> createState() => _SomeWidgetState();\n</code></pre>\n<p>The framework can call this method multiple times over the lifetime of\na <code>StatefulWidget</code>. For example, if the widget is inserted into the tree\nin multiple locations, the framework will create a separate <a href="https',":api",'.flutter.dev/flutter/widgets/State-class.html">State</a> object\nfor each location. Similarly, if the widget is removed from the tree and\nlater inserted into the tree again, the framework will call <a href="../../views_pre_auth_screens_recover/Recover/createState.md">createState</a>\nagain to create a fresh <a href="https',":api",'.flutter.dev/flutter/widgets/State-class.html">State</a> object, simplifying the lifecycle of\n<a href="https',":api",'.flutter.dev/flutter/widgets/State-class.html">State</a> objects.</p>']}),"\n",(0,s.jsx)(t.h2,{id:"implementation",children:"Implementation"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-dart",children:"@override\n_RecoverState createState() =\\> _RecoverState();\n"})})]})}function h(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,t,a)=>{a.d(t,{R:()=>c,x:()=>n});var r=a(296540);const s={},o=r.createContext(s);function c(e){const t=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function n(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),r.createElement(o.Provider,{value:t},e.children)}}}]);