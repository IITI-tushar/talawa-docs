"use strict";(self.webpackChunktalawa_docs=self.webpackChunktalawa_docs||[]).push([[62972],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>v});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function m(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var i=n.createContext({}),s=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},l=function(e){var t=s(e.components);return n.createElement(i.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,l=m(e,["components","mdxType","originalType","parentName"]),u=s(r),d=o,v=u["".concat(i,".").concat(d)]||u[d]||p[d]||a;return r?n.createElement(v,c(c({ref:t},l),{},{components:r})):n.createElement(v,c({ref:t},l))}));function v(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,c=new Array(a);c[0]=d;var m={};for(var i in t)hasOwnProperty.call(t,i)&&(m[i]=t[i]);m.originalType=e,m[u]="string"==typeof e?e:o,c[1]=m;for(var s=2;s<a;s++)c[s]=r[s];return n.createElement.apply(null,c)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},96506:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>c,default:()=>p,frontMatter:()=>a,metadata:()=>m,toc:()=>s});var n=r(87462),o=(r(67294),r(3905));const a={},c="createComments method",m={unversionedId:"talawa-mobile-docs/services_comment_service/CommentService/createComments",id:"talawa-mobile-docs/services_comment_service/CommentService/createComments",title:"createComments method",description:"Future&lt;void> createComments",source:"@site/docs/talawa-mobile-docs/services_comment_service/CommentService/createComments.md",sourceDirName:"talawa-mobile-docs/services_comment_service/CommentService",slug:"/talawa-mobile-docs/services_comment_service/CommentService/createComments",permalink:"/docs/talawa-mobile-docs/services_comment_service/CommentService/createComments",draft:!1,editUrl:"https://github.com/PalisadoesFoundation/talawa-docs/edit/develop/docs/talawa-mobile-docs/services_comment_service/CommentService/createComments.md",tags:[],version:"current",frontMatter:{},sidebar:"Talawa",previous:{title:"CommentService constructor",permalink:"/docs/talawa-mobile-docs/services_comment_service/CommentService/"},next:{title:"getCommentsForPost method",permalink:"/docs/talawa-mobile-docs/services_comment_service/CommentService/getCommentsForPost"}},i={},s=[{value:"Implementation",id:"implementation",level:2}],l={toc:s},u="wrapper";function p(e){let{components:t,...r}=e;return(0,o.kt)(u,(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"createcomments-method"},"createComments method"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://api.flutter.dev/flutter/dart-async/Future-class.html"},"Future"),"<","void> createComments\n(",(0,o.kt)("a",{parentName:"p",href:"https://api.flutter.dev/flutter/dart-core/String-class.html"},"String")," postId, ",(0,o.kt)("a",{parentName:"p",href:"https://api.flutter.dev/flutter/dart-core/String-class.html"},"String")," text)"),(0,o.kt)("p",null,"This function is used to add comment on the post."),(0,o.kt)("p",null,"parameters:"),(0,o.kt)("ul",null,(0,o.kt)("li",null,(0,o.kt)("code",null,"postId")," - Post id where comment need to be added."),(0,o.kt)("li",null,(0,o.kt)("code",null,"text")," - content of the comment.")),(0,o.kt)("h2",{id:"implementation"},"Implementation"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-dart"},"Future<void> createComments(String postId, String text) async {\n  print(\"comment service called\");\n  final String createCommentQuery = CommentQueries().createComment();\n  final result = await _dbFunctions.gqlAuthMutation(\n    createCommentQuery,\n    variables: {\n      'postId': postId, //Add your variables here\n      'text': text\n    },\n  );\n  print(\"comment added\");\n  print(result);\n  return result;\n}\n")))}p.isMDXComponent=!0}}]);