"use strict";(self.webpackChunktalawa_docs=self.webpackChunktalawa_docs||[]).push([[152125],{598051:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>r,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"talawa-api-docs/resolvers/Organization/posts/variables/posts","title":"posts","description":"talawa-api \u2022 Docs","source":"@site/docs/talawa-api-docs/resolvers/Organization/posts/variables/posts.md","sourceDirName":"talawa-api-docs/resolvers/Organization/posts/variables","slug":"/talawa-api-docs/resolvers/Organization/posts/variables/posts","permalink":"/docs/talawa-api-docs/resolvers/Organization/posts/variables/posts","draft":false,"unlisted":false,"editUrl":"https://github.com/PalisadoesFoundation/talawa-docs/edit/develop/docs/talawa-api-docs/resolvers/Organization/posts/variables/posts.md","tags":[],"version":"current","frontMatter":{}}');var o=n(474848),a=n(28453);const r={},i=void 0,l={},c=[{value:"Param",id:"param",level:2},{value:"Param",id:"param-1",level:2},{value:"Param",id:"param-2",level:2},{value:"Returns",id:"returns",level:2},{value:"See",id:"see",level:2},{value:"Defined in",id:"defined-in",level:2}];function d(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(s.p,{children:[(0,o.jsx)(s.a,{href:"/docs/talawa-api-docs/",children:(0,o.jsx)(s.strong,{children:"talawa-api"})})," \u2022 ",(0,o.jsx)(s.strong,{children:"Docs"})]}),"\n",(0,o.jsx)(s.hr,{}),"\n",(0,o.jsxs)(s.p,{children:[(0,o.jsx)(s.a,{href:"/docs/talawa-api-docs/modules",children:"talawa-api"})," / ",(0,o.jsx)(s.a,{href:"/docs/talawa-api-docs/resolvers/Organization/posts/",children:"resolvers/Organization/posts"})," / posts"]}),"\n",(0,o.jsx)(s.h1,{id:"variable-posts",children:"Variable: posts"}),"\n",(0,o.jsxs)(s.p,{children:["> ",(0,o.jsx)(s.code,{children:"const"})," ",(0,o.jsx)(s.strong,{children:"posts"}),": ",(0,o.jsx)(s.a,{href:"/docs/talawa-api-docs/types/generatedGraphQLTypes/type-aliases/OrganizationResolvers",children:(0,o.jsx)(s.code,{children:"OrganizationResolvers"})}),"[",(0,o.jsx)(s.code,{children:'"posts"'}),"]"]}),"\n",(0,o.jsxs)(s.p,{children:["Resolver function for the ",(0,o.jsx)(s.code,{children:"posts"})," field of an ",(0,o.jsx)(s.code,{children:"Organization"}),"."]}),"\n",(0,o.jsxs)(s.p,{children:["This resolver is used to resolve the ",(0,o.jsx)(s.code,{children:"posts"})," field of an ",(0,o.jsx)(s.code,{children:"Organization"})," type."]}),"\n",(0,o.jsx)(s.h2,{id:"param",children:"Param"}),"\n",(0,o.jsx)(s.p,{children:"The parent object representing the organization. It contains information about the organization, including the ID of the organization."}),"\n",(0,o.jsx)(s.h2,{id:"param-1",children:"Param"}),"\n",(0,o.jsx)(s.p,{children:"The arguments provided to the field. These arguments are used to filter, sort, and paginate the posts."}),"\n",(0,o.jsx)(s.h2,{id:"param-2",children:"Param"}),"\n",(0,o.jsx)(s.p,{children:"The context object passed to the GraphQL resolvers. It contains the API root URL, which is used to construct the media URL for each post."}),"\n",(0,o.jsx)(s.h2,{id:"returns",children:"Returns"}),"\n",(0,o.jsx)(s.p,{children:"A promise that resolves to a connection object containing the posts of the organization."}),"\n",(0,o.jsx)(s.h2,{id:"see",children:"See"}),"\n",(0,o.jsxs)(s.ul,{children:["\n",(0,o.jsx)(s.li,{children:"Post - The Post model used to interact with the posts collection in the database."}),"\n",(0,o.jsx)(s.li,{children:"parseGraphQLConnectionArguments - The function used to parse the GraphQL connection arguments (filter, sort, pagination)."}),"\n",(0,o.jsx)(s.li,{children:"transformToDefaultGraphQLConnection - The function used to transform the list of posts into a connection object."}),"\n",(0,o.jsx)(s.li,{children:"getCommonGraphQLConnectionFilter - The function used to get the common filter object for the GraphQL connection."}),"\n",(0,o.jsx)(s.li,{children:"getCommonGraphQLConnectionSort - The function used to get the common sort object for the GraphQL connection."}),"\n",(0,o.jsx)(s.li,{children:"MAXIMUM_FETCH_LIMIT - The maximum number of posts that can be fetched in a single request."}),"\n",(0,o.jsx)(s.li,{children:"GraphQLError - The error class used to throw GraphQL errors."}),"\n",(0,o.jsx)(s.li,{children:"OrganizationResolvers - The type definition for the resolvers of the Organization fields."}),"\n"]}),"\n",(0,o.jsx)(s.h2,{id:"defined-in",children:"Defined in"}),"\n",(0,o.jsx)(s.p,{children:(0,o.jsx)(s.a,{href:"https://github.com/PalisadoesFoundation/talawa-api/blob/92443bb6a5ff3ed66457149a509401986a82e570/src/resolvers/Organization/posts.ts#L39",children:"src/resolvers/Organization/posts.ts:39"})})]})}function h(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,o.jsx)(s,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},28453:(e,s,n)=>{n.d(s,{R:()=>r,x:()=>i});var t=n(296540);const o={},a=t.createContext(o);function r(e){const s=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),t.createElement(a.Provider,{value:s},e.children)}}}]);