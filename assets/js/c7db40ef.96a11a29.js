"use strict";(self.webpackChunktalawa_docs=self.webpackChunktalawa_docs||[]).push([[93302],{3905:(e,n,t)=>{t.d(n,{Zo:()=>m,kt:()=>f});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=r.createContext({}),c=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},m=function(e){var n=c(e.components);return r.createElement(l.Provider,{value:n},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),d=c(t),p=o,f=d["".concat(l,".").concat(p)]||d[p]||u[p]||a;return t?r.createElement(f,s(s({ref:n},m),{},{components:t})):r.createElement(f,s({ref:n},m))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,s=new Array(a);s[0]=p;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i[d]="string"==typeof e?e:o,s[1]=i;for(var c=2;c<a;c++)s[c]=t[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},47352:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var r=t(87462),o=(t(67294),t(3905));const a={},s="Event.fromJson constructor",i={unversionedId:"talawa-mobile-docs/models_events_event_model/Event/Event.fromJson",id:"talawa-mobile-docs/models_events_event_model/Event/Event.fromJson",title:"Event.fromJson constructor",description:"Event.fromJson(Map&lt;String, dynamic> json)",source:"@site/docs/talawa-mobile-docs/models_events_event_model/Event/Event.fromJson.md",sourceDirName:"talawa-mobile-docs/models_events_event_model/Event",slug:"/talawa-mobile-docs/models_events_event_model/Event/Event.fromJson",permalink:"/docs/talawa-mobile-docs/models_events_event_model/Event/Event.fromJson",draft:!1,editUrl:"https://github.com/PalisadoesFoundation/talawa-docs/edit/develop/docs/talawa-mobile-docs/models_events_event_model/Event/Event.fromJson.md",tags:[],version:"current",frontMatter:{},sidebar:"Talawa",previous:{title:"Event constructor",permalink:"/docs/talawa-mobile-docs/models_events_event_model/Event/"},next:{title:"admins property",permalink:"/docs/talawa-mobile-docs/models_events_event_model/Event/admins"}},l={},c=[{value:"Implementation",id:"implementation",level:2}],m={toc:c},d="wrapper";function u(e){let{components:n,...t}=e;return(0,o.kt)(d,(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"eventfromjson-constructor"},"Event.fromJson constructor"),(0,o.kt)("p",null,"Event.fromJson(",(0,o.kt)("a",{parentName:"p",href:"https://api.flutter.dev/flutter/dart-core/Map-class.html"},"Map"),"<",(0,o.kt)("a",{parentName:"p",href:"https://api.flutter.dev/flutter/dart-core/String-class.html"},"String"),", dynamic> json)"),(0,o.kt)("h2",{id:"implementation"},"Implementation"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-dart"},"factory Event.fromJson(\n  Map<String, dynamic> json,\n) {\n  return Event(\n    id: json['_id'] as String,\n    title: json['title'] as String?,\n    description: json['description'] as String?,\n    attendees: json['attendees'] as String?,\n    location: json['location'] as String?,\n    longitude: json['longitude'] as double?,\n    latitude: json['latitude'] as double?,\n    recurring: json['recurring'] as bool?,\n    allDay: json['allDay'] as bool?,\n    startDate: json['startDate'] as String?,\n    endDate: json['endDate'] as String?,\n    startTime: json['startTime'] as String?,\n    endTime: json['endTime'] as String?,\n    recurrence: json['recurrence'] as String?,\n    isPublic: json['isPublic'] as bool?,\n    isRegistered: json['isRegistered'] as bool?,\n    isRegisterable: json['isRegisterable'] as bool?,\n    creator: json['creator'] == null\n        ? null\n        //Creating a new User instance from a map structure.\n        : User.fromJson(\n            json['creator'] as Map<String, dynamic>,\n            fromOrg: true,\n          ),\n    organization: json['organization'] == null\n        ? null\n        //Creating a new OrgInfo instance from a map structure.\n        : OrgInfo.fromJson(json['organization'] as Map<String, dynamic>),\n    admins: json['admins'] == null\n        ? null\n        : (json['admins'] as List<dynamic>?)\n            ?.map(\n              (e) => User.fromJson(e as Map<String, dynamic>, fromOrg: true),\n            )\n            .toList(),\n    registrants: (json['registrants'] as List<dynamic>?)\n        ?.map((e) => User.fromJson(e as Map<String, dynamic>, fromOrg: false))\n        .toList(),\n  );\n}\n")))}u.isMDXComponent=!0}}]);