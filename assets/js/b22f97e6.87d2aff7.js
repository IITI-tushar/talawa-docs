"use strict";(self.webpackChunktalawa_docs=self.webpackChunktalawa_docs||[]).push([[49062],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>v});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),d=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},u=function(e){var t=d(e.components);return n.createElement(c.Provider,{value:t},e.children)},p="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=d(r),m=o,v=p["".concat(c,".").concat(m)]||p[m]||s[m]||a;return r?n.createElement(v,l(l({ref:t},u),{},{components:r})):n.createElement(v,l({ref:t},u))}));function v(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,l=new Array(a);l[0]=m;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[p]="string"==typeof e?e:o,l[1]=i;for(var d=2;d<a;d++)l[d]=r[d];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},23579:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>s,frontMatter:()=>a,metadata:()=>i,toc:()=>d});var n=r(87462),o=(r(67294),r(3905));const a={},l="checkURLandShowPopUp method",i={unversionedId:"talawa-mobile-docs/view_model_pre_auth_view_models_set_url_view_model/SetUrlViewModel/checkURLandShowPopUp",id:"talawa-mobile-docs/view_model_pre_auth_view_models_set_url_view_model/SetUrlViewModel/checkURLandShowPopUp",title:"checkURLandShowPopUp method",description:"Future&lt;void> checkURLandShowPopUp",source:"@site/docs/talawa-mobile-docs/view_model_pre_auth_view_models_set_url_view_model/SetUrlViewModel/checkURLandShowPopUp.md",sourceDirName:"talawa-mobile-docs/view_model_pre_auth_view_models_set_url_view_model/SetUrlViewModel",slug:"/talawa-mobile-docs/view_model_pre_auth_view_models_set_url_view_model/SetUrlViewModel/checkURLandShowPopUp",permalink:"/docs/talawa-mobile-docs/view_model_pre_auth_view_models_set_url_view_model/SetUrlViewModel/checkURLandShowPopUp",draft:!1,editUrl:"https://github.com/PalisadoesFoundation/talawa-docs/edit/develop/docs/talawa-mobile-docs/view_model_pre_auth_view_models_set_url_view_model/SetUrlViewModel/checkURLandShowPopUp.md",tags:[],version:"current",frontMatter:{},sidebar:"Talawa",previous:{title:"checkURLandNavigate method",permalink:"/docs/talawa-mobile-docs/view_model_pre_auth_view_models_set_url_view_model/SetUrlViewModel/checkURLandNavigate"},next:{title:"formKey property",permalink:"/docs/talawa-mobile-docs/view_model_pre_auth_view_models_set_url_view_model/SetUrlViewModel/formKey"}},c={},d=[{value:"Implementation",id:"implementation",level:2}],u={toc:d},p="wrapper";function s(e){let{components:t,...r}=e;return(0,o.kt)(p,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"checkurlandshowpopup-method"},"checkURLandShowPopUp method"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://api.flutter.dev/flutter/dart-async/Future-class.html"},"Future"),"<","void> checkURLandShowPopUp\n(",(0,o.kt)("a",{parentName:"p",href:"https://api.flutter.dev/flutter/dart-core/String-class.html"},"String")," argument)"),(0,o.kt)("p",null,"This function check the URL and navigate to the respective URL."),(0,o.kt)("p",null,(0,o.kt)("strong",null,"params"),":"),(0,o.kt)("ul",null,(0,o.kt)("li",null,(0,o.kt)("code",null,"argument"),": message")),(0,o.kt)("p",null,(0,o.kt)("strong",null,"returns"),":"),(0,o.kt)("ul",null,(0,o.kt)("li",null,(0,o.kt)("code",null,"Future<void>"),": sdf")),(0,o.kt)("h2",{id:"implementation"},"Implementation"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-dart"},'Future<void> checkURLandShowPopUp(String argument) async {\n  urlFocus.unfocus();\n  validate = AutovalidateMode.always;\n\n  // if the url is valid.\n  if (formKey.currentState!.validate()) {\n    navigationService.pushDialog(\n      const CustomProgressDialog(\n        key: Key(\'UrlCheckProgress\'),\n      ),\n    );\n    validate = AutovalidateMode.disabled;\n    final String uri = url.text.trim();\n    final bool? urlPresent =\n        await locator<Validator>().validateUrlExistence(uri);\n    if (urlPresent! == true) {\n      final box = Hive.box(\'url\');\n      box.put(urlKey, uri);\n      box.put(imageUrlKey, "$uri/talawa/");\n      navigationService.pop();\n      graphqlConfig.getOrgUrl();\n      navigationService.showSnackBar("Url is valid");\n    } else {\n      navigationService.pop();\n      navigationService.showTalawaErrorDialog(\n        "URL doesn\'t exist/no connection please check",\n        MessageType.info,\n      );\n    }\n  }\n}\n')))}s.isMDXComponent=!0}}]);