"use strict";(self.webpackChunktalawa_docs=self.webpackChunktalawa_docs||[]).push([[28945],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>f});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function m(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),i=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},l=function(e){var t=i(e.components);return n.createElement(c.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,l=m(e,["components","mdxType","originalType","parentName"]),u=i(r),d=o,f=u["".concat(c,".").concat(d)]||u[d]||p[d]||a;return r?n.createElement(f,s(s({ref:t},l),{},{components:r})):n.createElement(f,s({ref:t},l))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,s=new Array(a);s[0]=d;var m={};for(var c in t)hasOwnProperty.call(t,c)&&(m[c]=t[c]);m.originalType=e,m[u]="string"==typeof e?e:o,s[1]=m;for(var i=2;i<a;i++)s[i]=r[i];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},73110:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>a,metadata:()=>m,toc:()=>i});var n=r(87462),o=(r(67294),r(3905));const a={},s="getCommentsForPost method",m={unversionedId:"talawa-mobile-docs/services_comment_service/CommentService/getCommentsForPost",id:"talawa-mobile-docs/services_comment_service/CommentService/getCommentsForPost",title:"getCommentsForPost method",description:"Future getCommentsForPost",source:"@site/docs/talawa-mobile-docs/services_comment_service/CommentService/getCommentsForPost.md",sourceDirName:"talawa-mobile-docs/services_comment_service/CommentService",slug:"/talawa-mobile-docs/services_comment_service/CommentService/getCommentsForPost",permalink:"/docs/talawa-mobile-docs/services_comment_service/CommentService/getCommentsForPost",draft:!1,editUrl:"https://github.com/PalisadoesFoundation/talawa-docs/edit/develop/docs/talawa-mobile-docs/services_comment_service/CommentService/getCommentsForPost.md",tags:[],version:"current",frontMatter:{},sidebar:"Talawa",previous:{title:"createComments method",permalink:"/docs/talawa-mobile-docs/services_comment_service/CommentService/createComments"},next:{title:"CommentService class",permalink:"/docs/talawa-mobile-docs/services_comment_service/CommentService-class"}},c={},i=[{value:"Implementation",id:"implementation",level:2}],l={toc:i},u="wrapper";function p(e){let{components:t,...r}=e;return(0,o.kt)(u,(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"getcommentsforpost-method"},"getCommentsForPost method"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://api.flutter.dev/flutter/dart-async/Future-class.html"},"Future")," getCommentsForPost\n(",(0,o.kt)("a",{parentName:"p",href:"https://api.flutter.dev/flutter/dart-core/String-class.html"},"String")," postId)"),(0,o.kt)("p",null,"This function is used to fetch all comments on the post."),(0,o.kt)("p",null,"parameters:"),(0,o.kt)("ul",null,(0,o.kt)("li",null,(0,o.kt)("code",null,"postId")," - Post id for which comments need to be fetched.")),(0,o.kt)("h2",{id:"implementation"},"Implementation"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-dart"},'Future getCommentsForPost(String postId) async {\n  final String getCommmentQuery = CommentQueries().getPostsComments(postId);\n  final result = await _dbFunctions.gqlAuthMutation(getCommmentQuery);\n  if (result.data != null) {\n    return result.data["commentsByPost"] as List;\n  }\n  return [];\n}\n')))}p.isMDXComponent=!0}}]);