"use strict";(self.webpackChunktalawa_docs=self.webpackChunktalawa_docs||[]).push([[332259],{612744:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>o,contentTitle:()=>d,default:()=>h,frontMatter:()=>t,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"talawa-api-docs/resolvers/Mutation/createAdmin/variables/createAdmin","title":"createAdmin","description":"talawa-api","source":"@site/docs/talawa-api-docs/resolvers/Mutation/createAdmin/variables/createAdmin.md","sourceDirName":"talawa-api-docs/resolvers/Mutation/createAdmin/variables","slug":"/talawa-api-docs/resolvers/Mutation/createAdmin/variables/createAdmin","permalink":"/docs/talawa-api-docs/resolvers/Mutation/createAdmin/variables/createAdmin","draft":false,"unlisted":false,"editUrl":"https://github.com/PalisadoesFoundation/talawa-docs/edit/develop/docs/talawa-api-docs/resolvers/Mutation/createAdmin/variables/createAdmin.md","tags":[],"version":"current","frontMatter":{}}');var r=a(474848),s=a(28453);const t={},d=void 0,o={},c=[{value:"Param",id:"param",level:2},{value:"Param",id:"param-1",level:2},{value:"Param",id:"param-2",level:2},{value:"Returns",id:"returns",level:2},{value:"Remarks",id:"remarks",level:2},{value:"Defined in",id:"defined-in",level:2}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",hr:"hr",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"/docs/talawa-api-docs/",children:(0,r.jsx)(n.strong,{children:"talawa-api"})})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"/docs/talawa-api-docs/modules",children:"talawa-api"})," / ",(0,r.jsx)(n.a,{href:"/docs/talawa-api-docs/resolvers/Mutation/createAdmin/",children:"resolvers/Mutation/createAdmin"})," / createAdmin"]}),"\n",(0,r.jsx)(n.h1,{id:"variable-createadmin",children:"Variable: createAdmin"}),"\n",(0,r.jsxs)(n.p,{children:["> ",(0,r.jsx)(n.code,{children:"const"})," ",(0,r.jsx)(n.strong,{children:"createAdmin"}),": ",(0,r.jsx)(n.a,{href:"/docs/talawa-api-docs/types/generatedGraphQLTypes/type-aliases/MutationResolvers",children:(0,r.jsx)(n.code,{children:"MutationResolvers"})}),"[",(0,r.jsx)(n.code,{children:'"createAdmin"'}),"]"]}),"\n",(0,r.jsx)(n.p,{children:"Creates an admin for an organization by adding the specified user to the organization's admin list."}),"\n",(0,r.jsx)(n.p,{children:"This function performs several checks:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Verifies if the specified organization exists."}),"\n",(0,r.jsx)(n.li,{children:"Ensures the current user is found and has an associated app user profile."}),"\n",(0,r.jsx)(n.li,{children:"Checks if the current user is the creator of the organization."}),"\n",(0,r.jsx)(n.li,{children:"Checks if the specified user exists and is a member of the organization."}),"\n",(0,r.jsx)(n.li,{children:"Ensures the specified user is not already an admin of the organization."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"param",children:"Param"}),"\n",(0,r.jsx)(n.p,{children:"The parent object for the mutation (not used in this function)."}),"\n",(0,r.jsx)(n.h2,{id:"param-1",children:"Param"}),"\n",(0,r.jsx)(n.p,{children:"The arguments provided with the request, including:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"data"}),": An object containing:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"organizationId"}),": The ID of the organization to which the user will be added as an admin."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"userId"}),": The ID of the user to be made an admin."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"param-2",children:"Param"}),"\n",(0,r.jsx)(n.p,{children:"The context of the entire application, including user information and other context-specific data."}),"\n",(0,r.jsx)(n.h2,{id:"returns",children:"Returns"}),"\n",(0,r.jsx)(n.p,{children:"An object containing:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"user"}),": The updated app user profile of the user being added as an admin."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"userErrors"}),": An array of error objects if any errors occurred, otherwise an empty array."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"remarks",children:"Remarks"}),"\n",(0,r.jsx)(n.p,{children:"The function handles the following:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Caches and retrieves the organization data."}),"\n",(0,r.jsx)(n.li,{children:"Verifies the existence and profile of the current user."}),"\n",(0,r.jsx)(n.li,{children:"Ensures the user to be added is a member of the organization and is not already an admin."}),"\n",(0,r.jsx)(n.li,{children:"Updates the organization's admin list and the app user profile of the newly added admin."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"defined-in",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://github.com/PalisadoesFoundation/talawa-api/blob/3a5276aff43f5de4f7fab3ec9683a420dcdc7a06/src/resolvers/Mutation/createAdmin.ts#L47",children:"src/resolvers/Mutation/createAdmin.ts:47"})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},28453:(e,n,a)=>{a.d(n,{R:()=>t,x:()=>d});var i=a(296540);const r={},s=i.createContext(r);function t(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);