"use strict";(self.webpackChunktalawa_docs=self.webpackChunktalawa_docs||[]).push([[496693],{674886:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>i,contentTitle:()=>c,default:()=>g,frontMatter:()=>l,metadata:()=>t,toc:()=>r});const t=JSON.parse('{"id":"talawa-mobile-docs/view_model_lang_view_model/AppLanguage/changeLanguage","title":"changeLanguage method","description":"Future&lt;void\\\\> changeLanguage","source":"@site/docs/talawa-mobile-docs/view_model_lang_view_model/AppLanguage/changeLanguage.md","sourceDirName":"talawa-mobile-docs/view_model_lang_view_model/AppLanguage","slug":"/talawa-mobile-docs/view_model_lang_view_model/AppLanguage/changeLanguage","permalink":"/docs/talawa-mobile-docs/view_model_lang_view_model/AppLanguage/changeLanguage","draft":false,"unlisted":false,"editUrl":"https://github.com/PalisadoesFoundation/talawa-docs/edit/develop/docs/talawa-mobile-docs/view_model_lang_view_model/AppLanguage/changeLanguage.md","tags":[],"version":"current","frontMatter":{},"sidebar":"Talawa","previous":{"title":"appLocal property","permalink":"/docs/talawa-mobile-docs/view_model_lang_view_model/AppLanguage/appLocal"},"next":{"title":"databaseFunctions property","permalink":"/docs/talawa-mobile-docs/view_model_lang_view_model/AppLanguage/databaseFunctions"}}');var o=n(474848),s=n(28453);const l={},c="changeLanguage method",i={},r=[{value:"Implementation",id:"implementation",level:2}];function p(e){const a={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(a.header,{children:(0,o.jsx)(a.h1,{id:"changelanguage-method",children:"changeLanguage method"})}),"\n",(0,o.jsxs)(a.p,{children:[(0,o.jsx)(a.a,{href:"https:api.flutter.dev/flutter/dart-async/Future-class.html",children:"Future"}),"<void> changeLanguage\n(",(0,o.jsx)(a.a,{href:"https:api.flutter.dev/flutter/dart-ui/Locale-class.html",children:"Locale"})," type)"]}),"\n",(0,o.jsx)(a.p,{children:"<p>This function change the app default language.</p>\n<p>params:</p>\n<ul>\n<li><code>type</code> : <code>Locale</code> type, the language need to be updated with.</li>\n</ul>"}),"\n",(0,o.jsx)(a.h2,{id:"implementation",children:"Implementation"}),"\n",(0,o.jsx)(a.pre,{children:(0,o.jsx)(a.code,{className:"language-dart",children:"Future\\<void\\> changeLanguage(Locale type) async \\{\n  if the app language is of same [type].\n  if (_appLocale == type) \\{\n    return;\n  \\}\n\n  if (isTest) \\{\n    _appLocale = type;\n  \\} else \\{\n    final prefs = await SharedPreferences.getInstance();\n    if (type == const Locale(\"es\")) \\{\n      If selected language is spanish\n      _appLocale = const Locale(\"es\");\n      await prefs.setString('language_code', 'es');\n      await prefs.setString('countryCode', 'ES');\n    \\} else if (type == const Locale(\"fr\")) \\{\n      If selected language is french\n      _appLocale = const Locale(\"fr\");\n      await prefs.setString('language_code', 'fr');\n      await prefs.setString('countryCode', 'FR');\n    \\} else if (type == const Locale(\"hi\")) \\{\n      If selected language is hindi\n      _appLocale = const Locale(\"hi\");\n      await prefs.setString('language_code', 'hi');\n      await prefs.setString('countryCode', 'IN');\n    \\} else if (type == const Locale(\"zh\")) \\{\n      If selected language is Chinese\n      _appLocale = const Locale(\"zh\");\n      await prefs.setString('language_code', 'zh');\n      await prefs.setString('countryCode', 'CN');\n    \\} else if (type == const Locale(\"de\")) \\{\n      If selected language is Chinese\n      _appLocale = const Locale(\"de\");\n      await prefs.setString('language_code', 'de');\n      await prefs.setString('countryCode', 'GE');\n    \\} else if (type == const Locale(\"ja\")) \\{\n      If selected language is Chinese\n      _appLocale = const Locale(\"ja\");\n      await prefs.setString('language_code', 'ja');\n      await prefs.setString('countryCode', 'JP');\n    \\} else if (type == const Locale(\"pt\")) \\{\n      If selected language is Chinese\n      _appLocale = const Locale(\"pt\");\n      await prefs.setString('language_code', 'pt');\n      await prefs.setString('countryCode', 'PT');\n    \\} else \\{\n      If selected language is english\n      _appLocale = const Locale(\"en\");\n      await prefs.setString('language_code', 'en');\n      await prefs.setString('countryCode', 'US');\n    \\}\n  \\}\n\n  notifying the consumers\n  notifyListeners();\n\\}\n"})})]})}function g(e={}){const{wrapper:a}={...(0,s.R)(),...e.components};return a?(0,o.jsx)(a,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}},28453:(e,a,n)=>{n.d(a,{R:()=>l,x:()=>c});var t=n(296540);const o={},s=t.createContext(o);function l(e){const a=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function c(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:l(e.components),t.createElement(s.Provider,{value:a},e.children)}}}]);