"use strict";(self.webpackChunktalawa_docs=self.webpackChunktalawa_docs||[]).push([[96371],{3905:(e,t,o)=>{o.d(t,{Zo:()=>c,kt:()=>u});var n=o(67294);function m(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function r(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function i(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?r(Object(o),!0).forEach((function(t){m(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):r(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function a(e,t){if(null==e)return{};var o,n,m=function(e,t){if(null==e)return{};var o,n,m={},r=Object.keys(e);for(n=0;n<r.length;n++)o=r[n],t.indexOf(o)>=0||(m[o]=e[o]);return m}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)o=r[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(m[o]=e[o])}return m}var s=n.createContext({}),l=function(e){var t=n.useContext(s),o=t;return e&&(o="function"==typeof e?e(t):i(i({},t),e)),o},c=function(e){var t=l(e.components);return n.createElement(s.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},w=n.forwardRef((function(e,t){var o=e.components,m=e.mdxType,r=e.originalType,s=e.parentName,c=a(e,["components","mdxType","originalType","parentName"]),d=l(o),w=m,u=d["".concat(s,".").concat(w)]||d[w]||p[w]||r;return o?n.createElement(u,i(i({ref:t},c),{},{components:o})):n.createElement(u,i({ref:t},c))}));function u(e,t){var o=arguments,m=t&&t.mdxType;if("string"==typeof e||m){var r=o.length,i=new Array(r);i[0]=w;var a={};for(var s in t)hasOwnProperty.call(t,s)&&(a[s]=t[s]);a.originalType=e,a[d]="string"==typeof e?e:m,i[1]=a;for(var l=2;l<r;l++)i[l]=o[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,o)}w.displayName="MDXCreateElement"},12855:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>r,metadata:()=>a,toc:()=>l});var n=o(87462),m=(o(67294),o(3905));const r={},i="getComments method",a={unversionedId:"talawa-mobile-docs/view_model_widgets_view_models_comments_view_model/CommentsViewModel/getComments",id:"talawa-mobile-docs/view_model_widgets_view_models_comments_view_model/CommentsViewModel/getComments",title:"getComments method",description:"Future getComments",source:"@site/docs/talawa-mobile-docs/view_model_widgets_view_models_comments_view_model/CommentsViewModel/getComments.md",sourceDirName:"talawa-mobile-docs/view_model_widgets_view_models_comments_view_model/CommentsViewModel",slug:"/talawa-mobile-docs/view_model_widgets_view_models_comments_view_model/CommentsViewModel/getComments",permalink:"/docs/talawa-mobile-docs/view_model_widgets_view_models_comments_view_model/CommentsViewModel/getComments",draft:!1,editUrl:"https://github.com/PalisadoesFoundation/talawa-docs/edit/develop/docs/talawa-mobile-docs/view_model_widgets_view_models_comments_view_model/CommentsViewModel/getComments.md",tags:[],version:"current",frontMatter:{},sidebar:"Talawa",previous:{title:"createComment method",permalink:"/docs/talawa-mobile-docs/view_model_widgets_view_models_comments_view_model/CommentsViewModel/createComment"},next:{title:"initialise method",permalink:"/docs/talawa-mobile-docs/view_model_widgets_view_models_comments_view_model/CommentsViewModel/initialise"}},s={},l=[{value:"Implementation",id:"implementation",level:2}],c={toc:l},d="wrapper";function p(e){let{components:t,...o}=e;return(0,m.kt)(d,(0,n.Z)({},c,o,{components:t,mdxType:"MDXLayout"}),(0,m.kt)("h1",{id:"getcomments-method"},"getComments method"),(0,m.kt)("p",null,(0,m.kt)("a",{parentName:"p",href:"https://api.flutter.dev/flutter/dart-async/Future-class.html"},"Future")," getComments\n()"),(0,m.kt)("p",null,"This methods fetch all comments on the post. The function uses ",(0,m.kt)("code",null,"getCommentsForPost")," method by Comment Service."),(0,m.kt)("h2",{id:"implementation"},"Implementation"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-dart"},"Future getComments() async {\n  setState(ViewState.busy);\n  final List commentsJSON =\n      await _commentService.getCommentsForPost(_postID) as List;\n  print(commentsJSON);\n  commentsJSON.forEach((commentJson) {\n    _commentlist.add(Comment.fromJson(commentJson as Map<String, dynamic>));\n  });\n  setState(ViewState.idle);\n}\n")))}p.isMDXComponent=!0}}]);