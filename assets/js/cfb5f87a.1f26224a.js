"use strict";(self.webpackChunktalawa_docs=self.webpackChunktalawa_docs||[]).push([[66344],{3699:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>l,default:()=>c,frontMatter:()=>r,metadata:()=>i,toc:()=>d});var s=n(85893),o=n(11151);const r={},l="choseValueFromDropdown method",i={id:"talawa-mobile-docs/view_model_after_auth_view_models_event_view_models_explore_events_view_model/ExploreEventsViewModel/choseValueFromDropdown",title:"choseValueFromDropdown method",description:"Future&lt;void\\> choseValueFromDropdown",source:"@site/docs/talawa-mobile-docs/view_model_after_auth_view_models_event_view_models_explore_events_view_model/ExploreEventsViewModel/choseValueFromDropdown.md",sourceDirName:"talawa-mobile-docs/view_model_after_auth_view_models_event_view_models_explore_events_view_model/ExploreEventsViewModel",slug:"/talawa-mobile-docs/view_model_after_auth_view_models_event_view_models_explore_events_view_model/ExploreEventsViewModel/choseValueFromDropdown",permalink:"/docs/talawa-mobile-docs/view_model_after_auth_view_models_event_view_models_explore_events_view_model/ExploreEventsViewModel/choseValueFromDropdown",draft:!1,unlisted:!1,editUrl:"https://github.com/PalisadoesFoundation/talawa-docs/edit/develop/docs/talawa-mobile-docs/view_model_after_auth_view_models_event_view_models_explore_events_view_model/ExploreEventsViewModel/choseValueFromDropdown.md",tags:[],version:"current",frontMatter:{},sidebar:"Talawa",previous:{title:"checkIfExistsAndAddNewEvent method",permalink:"/docs/talawa-mobile-docs/view_model_after_auth_view_models_event_view_models_explore_events_view_model/ExploreEventsViewModel/checkIfExistsAndAddNewEvent"},next:{title:"chosenValue property",permalink:"/docs/talawa-mobile-docs/view_model_after_auth_view_models_event_view_models_explore_events_view_model/ExploreEventsViewModel/chosenValue"}},a={},d=[{value:"Implementation",id:"implementation",level:2}];function _(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,o.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"chosevaluefromdropdown-method",children:"choseValueFromDropdown method"})}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.a,{href:"https:api.flutter.dev/flutter/dart-async/Future-class.html",children:"Future"}),"<void> choseValueFromDropdown\n(",(0,s.jsx)(t.a,{href:"https:api.flutter.dev/flutter/dart-core/String-class.html",children:"String"})," value)"]}),"\n",(0,s.jsx)(t.p,{children:"<p>This function takes the choosen value from dropdown and\nreturn the filter events, if empty list then return relevant message.</p>\n<p>params:</p>\n<ul>\n<li><code>value</code> : choosen value from dropdown.</li>\n</ul>"}),"\n",(0,s.jsx)(t.h2,{id:"implementation",children:"Implementation"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-dart",children:'Future\\<void\\> choseValueFromDropdown(String value) async \\{\n  _chosenValue = value;\n  notifyListeners();\n  setState(ViewState.busy);\n\n  switch (_chosenValue) \\{\n    if `_chosenValue` is "All events".\n    case \'All Events\':\n      \\{\n        all events\n        _events = _bufferEvents;\n        if list is empty\n        _emptyListMessage = "Looks like there aren\'t any events.";\n      \\}\n      break;\n    if `_chosenValue` is "created event".\n    case \'Created Events\':\n      \\{\n        loop through the `_events` list and check\n        for the creator id matched the current user id.\n        _events = List.from(\n          _bufferEvents.where(\n            (element) =\\> element.creator!.id == userConfig.currentUser.id,\n          ),\n        );\n        if list is empty\n        _emptyListMessage = "You have not created any event.";\n      \\}\n      break;\n    if `_chosenValue` is "Registered Events".\n    case \'Registered Events\':\n      \\{\n        loop through the `_events` list and filter elements\n        if `element.isRegistered` is true and user is not the creator.\n        _events = List.from(\n          _bufferEvents.where(\n            (element) =\\>\n                element.isRegistered == true &&\n                element.creator!.id != userConfig.currentUser.id,\n          ),\n        );\n        if list is empty\n        _emptyListMessage = "No registered events are present";\n      \\}\n      break;\n    if `_chosenValue` is "Registered Events".\n    case \'Public Events\':\n      \\{\n        loop through the `_events` list and filter elements\n        with the `isPublic` as true.\n        _events = _bufferEvents\n            .where((element) =\\> element.isPublic == true)\n            .toList();\n\n        if list is empty\n        _emptyListMessage = "There aren\'t any public events.";\n      \\}\n      break;\n    case \'Private Events\':\n      \\{\n        loop through the `_events` list and filter elements\n        with the `isPublic` as false.\n        _events = _bufferEvents\n            .where((element) =\\> element.isPublic == false)\n            .toList();\n        if list is empty\n        _emptyListMessage = "There aren\'t any private events.";\n      \\}\n      break;\n\n    default:\n      \\{\n        _events = _bufferEvents;\n      \\}\n  \\}\n  await Future.delayed(const Duration(milliseconds: 500));\n  setState(ViewState.idle);\n\\}\n'})})]})}function c(e={}){const{wrapper:t}={...(0,o.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(_,{...e})}):_(e)}},11151:(e,t,n)=>{n.d(t,{Z:()=>i,a:()=>l});var s=n(67294);const o={},r=s.createContext(o);function l(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:l(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);