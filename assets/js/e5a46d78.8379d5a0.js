"use strict";(self.webpackChunktalawa_docs=self.webpackChunktalawa_docs||[]).push([[29379],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>_});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),d=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},s=function(e){var t=d(e.components);return r.createElement(c.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,l=e.originalType,c=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),u=d(n),m=o,_=u["".concat(c,".").concat(m)]||u[m]||p[m]||l;return n?r.createElement(_,a(a({ref:t},s),{},{components:n})):r.createElement(_,a({ref:t},s))}));function _(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var l=n.length,a=new Array(l);a[0]=m;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[u]="string"==typeof e?e:o,a[1]=i;for(var d=2;d<l;d++)a[d]=n[d];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},12520:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>l,metadata:()=>i,toc:()=>d});var r=n(87462),o=(n(67294),n(3905));const l={},a="scanQR method",i={unversionedId:"talawa-mobile-docs/view_model_pre_auth_view_models_set_url_view_model/SetUrlViewModel/scanQR",id:"talawa-mobile-docs/view_model_pre_auth_view_models_set_url_view_model/SetUrlViewModel/scanQR",title:"scanQR method",description:"void scanQR",source:"@site/docs/talawa-mobile-docs/view_model_pre_auth_view_models_set_url_view_model/SetUrlViewModel/scanQR.md",sourceDirName:"talawa-mobile-docs/view_model_pre_auth_view_models_set_url_view_model/SetUrlViewModel",slug:"/talawa-mobile-docs/view_model_pre_auth_view_models_set_url_view_model/SetUrlViewModel/scanQR",permalink:"/docs/talawa-mobile-docs/view_model_pre_auth_view_models_set_url_view_model/SetUrlViewModel/scanQR",draft:!1,editUrl:"https://github.com/PalisadoesFoundation/talawa-docs/edit/develop/docs/talawa-mobile-docs/view_model_pre_auth_view_models_set_url_view_model/SetUrlViewModel/scanQR.md",tags:[],version:"current",frontMatter:{},sidebar:"Talawa",previous:{title:"result property",permalink:"/docs/talawa-mobile-docs/view_model_pre_auth_view_models_set_url_view_model/SetUrlViewModel/result"},next:{title:"url property",permalink:"/docs/talawa-mobile-docs/view_model_pre_auth_view_models_set_url_view_model/SetUrlViewModel/url"}},c={},d=[{value:"Implementation",id:"implementation",level:2}],s={toc:d},u="wrapper";function p(e){let{components:t,...n}=e;return(0,o.kt)(u,(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"scanqr-method"},"scanQR method"),(0,o.kt)("p",null,"void scanQR\n(",(0,o.kt)("a",{parentName:"p",href:"https://api.flutter.dev/flutter/widgets/BuildContext-class.html"},"BuildContext")," context)"),(0,o.kt)("p",null,"This function create a widget which is used to scan the QR-code."),(0,o.kt)("p",null,(0,o.kt)("strong",null,"params"),":"),(0,o.kt)("ul",null,(0,o.kt)("li",null,(0,o.kt)("code",null,"context"),": BuildContext")),(0,o.kt)("p",null,(0,o.kt)("strong",null,"returns"),": None"),(0,o.kt)("h2",{id:"implementation"},"Implementation"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-dart"},"void scanQR(BuildContext context) {\n  showModalBottomSheet(\n    context: context,\n    barrierColor: Colors.transparent,\n    shape: const RoundedRectangleBorder(\n      borderRadius: BorderRadius.only(\n        topLeft: Radius.circular(30),\n        topRight: Radius.circular(30),\n      ),\n    ),\n    builder: (BuildContext context) {\n      return ClipRRect(\n        borderRadius: const BorderRadius.only(\n          topLeft: Radius.circular(30),\n          topRight: Radius.circular(30),\n        ),\n        child: Container(\n          height: MediaQuery.of(context).size.width,\n          decoration: BoxDecoration(\n            color: Theme.of(context).colorScheme.secondary,\n          ),\n          child: Column(\n            mainAxisAlignment: MainAxisAlignment.center,\n            children: [\n              SizedBox(\n                height: 250,\n                width: 250,\n                child: QRView(\n                  key: qrKey,\n                  onQRViewCreated: _onQRViewCreated,\n                  overlay: QrScannerOverlayShape(\n                    borderRadius: 10,\n                    borderLength: 20,\n                    borderWidth: 10,\n                    cutOutSize: 250,\n                  ),\n                  /*overlayMargin: EdgeInsets.all(50)*/\n                ),\n              ),\n              SizedBox(\n                height: SizeConfig.safeBlockVertical! * 4,\n              ),\n              const Text('Scan QR'),\n              SizedBox(\n                height: SizeConfig.safeBlockVertical! * 4,\n              )\n            ],\n          ),\n        ),\n      );\n    },\n  );\n}\n")))}p.isMDXComponent=!0}}]);