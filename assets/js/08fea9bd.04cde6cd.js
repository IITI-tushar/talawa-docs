"use strict";(self.webpackChunktalawa_docs=self.webpackChunktalawa_docs||[]).push([[794884],{823053:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>r,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"talawa-mobile-docs/services_navigation_service/NavigationService/popAndPushScreen","title":"popAndPushScreen method","description":"Future popAndPushScreen","source":"@site/docs/talawa-mobile-docs/services_navigation_service/NavigationService/popAndPushScreen.md","sourceDirName":"talawa-mobile-docs/services_navigation_service/NavigationService","slug":"/talawa-mobile-docs/services_navigation_service/NavigationService/popAndPushScreen","permalink":"/docs/talawa-mobile-docs/services_navigation_service/NavigationService/popAndPushScreen","draft":false,"unlisted":false,"editUrl":"https://github.com/PalisadoesFoundation/talawa-docs/edit/develop/docs/talawa-mobile-docs/services_navigation_service/NavigationService/popAndPushScreen.md","tags":[],"version":"current","frontMatter":{},"sidebar":"Talawa","previous":{"title":"pop method","permalink":"/docs/talawa-mobile-docs/services_navigation_service/NavigationService/pop"},"next":{"title":"pushDialog method","permalink":"/docs/talawa-mobile-docs/services_navigation_service/NavigationService/pushDialog"}}');var i=t(474848),o=t(28453);const r={},s="popAndPushScreen method",c={},d=[{value:"Implementation",id:"implementation",level:2}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"popandpushscreen-method",children:"popAndPushScreen method"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https:api.flutter.dev/flutter/dart-async/Future-class.html",children:"Future"})," popAndPushScreen\n(",(0,i.jsx)(n.a,{href:"https:api.flutter.dev/flutter/dart-core/String-class.html",children:"String"})," routeName, {dynamic arguments})"]}),"\n",(0,i.jsx)(n.p,{children:"<p>This function pop the initial route and push the new route to the navigator.</p>\n<p>params:</p>\n<ul>\n<li><code>routeName</code></li>\n<li><code>arguments</code> : necessary data for the route</li>\n</ul>"}),"\n",(0,i.jsx)(n.h2,{id:"implementation",children:"Implementation"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:"Future\\<dynamic\\> popAndPushScreen(String routeName, \\{dynamic arguments\\}) \\{\n  navigatorKey.currentState!.pop();\n  return pushScreen(routeName, arguments: arguments);\n\\}\n"})})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>s});var a=t(296540);const i={},o=a.createContext(i);function r(e){const n=a.useContext(o);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),a.createElement(o.Provider,{value:n},e.children)}}}]);