"use strict";(self.webpackChunktalawa_docs=self.webpackChunktalawa_docs||[]).push([[529967],{367521:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>l});var s=n(785893),r=n(511151);const a={},o="send method",i={id:"talawa-mobile-docs/services_graphql_config/MockHttpClient/send",title:"send method",description:"- @override",source:"@site/docs/talawa-mobile-docs/services_graphql_config/MockHttpClient/send.md",sourceDirName:"talawa-mobile-docs/services_graphql_config/MockHttpClient",slug:"/talawa-mobile-docs/services_graphql_config/MockHttpClient/send",permalink:"/docs/talawa-mobile-docs/services_graphql_config/MockHttpClient/send",draft:!1,unlisted:!1,editUrl:"https://github.com/PalisadoesFoundation/talawa-docs/edit/develop/docs/talawa-mobile-docs/services_graphql_config/MockHttpClient/send.md",tags:[],version:"current",frontMatter:{},sidebar:"Talawa",previous:{title:"MockHttpClient constructor",permalink:"/docs/talawa-mobile-docs/services_graphql_config/MockHttpClient/"},next:{title:"MockHttpClient class",permalink:"/docs/talawa-mobile-docs/services_graphql_config/MockHttpClient-class"}},c={},l=[{value:"Implementation",id:"implementation",level:2}];function d(e){const t={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"send-method",children:"send method"})}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["@",(0,s.jsx)(t.a,{href:"https:api.flutter.dev/flutter/dart-core/override-constant.html",children:"override"})]}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.a,{href:"https:api.flutter.dev/flutter/dart-async/Future-class.html",children:"Future"}),"<",(0,s.jsx)(t.a,{href:"https:pub.dev/documentation/http/0.13.6/http/StreamedResponse-class.html",children:"StreamedResponse"}),"> send\n(",(0,s.jsx)(t.a,{href:"https:pub.dev/documentation/http/0.13.6/http/BaseRequest-class.html",children:"BaseRequest"}),"? request)"]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.em,{children:'<span class="feature">override</span>'})}),"\n",(0,s.jsx)(t.p,{children:"<p>Sends an HTTP request and asynchronously returns the response.</p>"}),"\n",(0,s.jsx)(t.h2,{id:"implementation",children:"Implementation"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-dart",children:"@override\nFuture\\<http.StreamedResponse\\> send(http.BaseRequest? request) =\\>\n    ignore: invalid_use_of_visible_for_testing_member\n    super.noSuchMethod(\n      Invocation.method(#send, [request]),\n      returnValue: Future.value(\n        http.StreamedResponse(\n          Stream.fromIterable(const [\\<int\\>[]]),\n          500,\n        ),\n      ),\n    ) as Future\\<http.StreamedResponse\\>;\n"})})]})}function p(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},511151:(e,t,n)=>{n.d(t,{Z:()=>i,a:()=>o});var s=n(667294);const r={},a=s.createContext(r);function o(e){const t=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(a.Provider,{value:t},e.children)}}}]);