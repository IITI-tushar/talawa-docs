"use strict";(self.webpackChunktalawa_docs=self.webpackChunktalawa_docs||[]).push([[47729],{85649:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>m,frontMatter:()=>d,metadata:()=>r,toc:()=>l});var o=n(85893),a=n(11151);const d={},s="addUserBottomSheet method",r={id:"talawa-mobile-docs/widgets_add_members_bottom_sheet/EventBottomSheet/addUserBottomSheet",title:"addUserBottomSheet method",description:"void addUserBottomSheet",source:"@site/docs/talawa-mobile-docs/widgets_add_members_bottom_sheet/EventBottomSheet/addUserBottomSheet.md",sourceDirName:"talawa-mobile-docs/widgets_add_members_bottom_sheet/EventBottomSheet",slug:"/talawa-mobile-docs/widgets_add_members_bottom_sheet/EventBottomSheet/addUserBottomSheet",permalink:"/docs/talawa-mobile-docs/widgets_add_members_bottom_sheet/EventBottomSheet/addUserBottomSheet",draft:!1,unlisted:!1,editUrl:"https://github.com/PalisadoesFoundation/talawa-docs/edit/develop/docs/talawa-mobile-docs/widgets_add_members_bottom_sheet/EventBottomSheet/addUserBottomSheet.md",tags:[],version:"current",frontMatter:{},sidebar:"Talawa",previous:{title:"EventBottomSheet constructor",permalink:"/docs/talawa-mobile-docs/widgets_add_members_bottom_sheet/EventBottomSheet/"},next:{title:"EventBottomSheet class",permalink:"/docs/talawa-mobile-docs/widgets_add_members_bottom_sheet/EventBottomSheet-class"}},i={},l=[{value:"Implementation",id:"implementation",level:2}];function c(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,a.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"adduserbottomsheet-method",children:"addUserBottomSheet method"})}),"\n",(0,o.jsxs)(t.p,{children:["void addUserBottomSheet\n({required ",(0,o.jsx)(t.a,{href:"https:api.flutter.dev/flutter/widgets/BuildContext-class.html",children:"BuildContext"})," context, required ",(0,o.jsx)(t.a,{href:"/docs/talawa-mobile-docs/view_model_after_auth_view_models_event_view_models_create_event_view_model/CreateEventViewModel-class",children:"CreateEventViewModel"})," model})"]}),"\n",(0,o.jsx)(t.p,{children:"<p>This function creates a modal material design bottom sheet.</p>\n<p>to let the user add admin or members to an organization.\n<strong>params</strong>:</p>\n<ul>\n<li><code>context</code>: BuildContext</li>\n<li><code>model</code>: CreateEventViewModel</li>\n</ul>\n<p><strong>returns</strong>:\nNone</p>"}),"\n",(0,o.jsx)(t.h2,{id:"implementation",children:"Implementation"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-dart",children:'void addUserBottomSheet(\\{\n  required BuildContext context,\n  required CreateEventViewModel model,\n\\}) \\{\n  Returns a Future that resolves to the value ("context") passed\n  to Navigator.pop\n  showModalBottomSheet(\n    context: context,\n    shape: const RoundedRectangleBorder(\n      borderRadius: BorderRadius.only(\n        topLeft: Radius.circular(30),\n        topRight: Radius.circular(30),\n      ),\n    ),\n    isScrollControlled: true,\n    builder: (BuildContext context) \\{\n      return StatefulBuilder(\n        builder: (BuildContext context, StateSetter setState) \\{\n          return ClipRRect(\n            borderRadius: const BorderRadius.only(\n              topLeft: Radius.circular(30),\n              topRight: Radius.circular(30),\n            ),\n            child: Container(\n              height: MediaQuery.of(context).size.height * 0.8,\n              decoration: BoxDecoration(\n                color: Theme.of(context).scaffoldBackgroundColor,\n              ),\n              child: Padding(\n                padding: const EdgeInsets.all(10),\n                child: Column(\n                  children: [\n                    const Text(\n                      "Add Members",\n                      style: TextStyle(fontSize: 16),\n                    ),\n                    TextButton(\n                      key: const Key(\'text_btn_ambs1\'),\n                      onPressed: () \\{\n                        model.buildUserList();\n                        Navigator.pop(context);\n                      \\},\n                      child: const Text("Done"),\n                    ),\n                    const Divider(),\n                    FutureBuilder(\n                      an admin can access the list of the members in an organization\n                      future: model.getCurrentOrgUsersList(),\n                      builder: (\n                        BuildContext context,\n                        AsyncSnapshot\\<List\\<User\\>\\> snapshot,\n                      ) \\{\n                        if (snapshot.data == null) \\{\n                          return const Center(\n                            child: CircularProgressIndicator(),\n                          );\n                        \\} else \\{\n                          return snapshot.data!.isEmpty\n                              ? const Center(\n                                  child: Text(\n                                    "There aren\'t any members in this organization.",\n                                  ),\n                                )\n                              Displaying the list of the members\n                              : Flexible(\n                                  child: ListView.builder(\n                                    shrinkWrap: true,\n                                    itemCount: snapshot.data!.length,\n                                    itemBuilder: (context, index) \\{\n                                      return CheckboxListTile(\n                                        checkColor: Theme.of(context)\n                                            .colorScheme\n                                            .background,\n                                        activeColor: Theme.of(context)\n                                            .colorScheme\n                                            .primary,\n                                        title: Text(\n                                          "$\\{snapshot.data![index].firstName!\\} $\\{snapshot.data![index].lastName!\\}",\n                                        ),\n                                        value: model.memberCheckedMap[\n                                            snapshot.data![index].id],\n                                        onChanged: (val) \\{\n                                          setState(\n                                            () \\{\n                                              model.memberCheckedMap[snapshot\n                                                  .data![index].id!] = val!;\n                                            \\},\n                                          );\n                                        \\},\n                                      );\n                                    \\},\n                                  ),\n                                );\n                        \\}\n                      \\},\n                    )\n                  ],\n                ),\n              ),\n            ),\n          );\n        \\},\n      );\n    \\},\n  );\n\\}\n'})})]})}function m(e={}){const{wrapper:t}={...(0,a.a)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},11151:(e,t,n)=>{n.d(t,{Z:()=>r,a:()=>s});var o=n(67294);const a={},d=o.createContext(a);function s(e){const t=o.useContext(d);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),o.createElement(d.Provider,{value:t},e.children)}}}]);