"use strict";(self.webpackChunktalawa_docs=self.webpackChunktalawa_docs||[]).push([[98454],{52491:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>r,toc:()=>d});var t=i(85893),a=i(11151);const s={id:"mutations",title:"Mutations"},o=void 0,r={id:"developers/talawa-api/mutations",title:"Mutations",description:"Mutations can be classified in a number of ways, including by the type of change that they introduce, the part of the page that they affect, or the manner in which they are introduced. Talawa API introduces mutation to alter it's value to a certain degree.",source:"@site/docs/developers/talawa-api/mutations.md",sourceDirName:"developers/talawa-api",slug:"/developers/talawa-api/mutations",permalink:"/docs/developers/talawa-api/mutations",draft:!1,unlisted:!1,editUrl:"https://github.com/PalisadoesFoundation/talawa-docs/edit/develop/docs/developers/talawa-api/mutations.md",tags:[],version:"current",frontMatter:{id:"mutations",title:"Mutations"},sidebar:"docs",previous:{title:"Admin & Super Admin",permalink:"/docs/developers/talawa-api/constraints/admin"},next:{title:"Schemas",permalink:"/docs/developers/talawa-api/schemas"}},l={},d=[{value:"Mutations According to Roles",id:"mutations-according-to-roles",level:2},{value:"Type Of Users in Talawa",id:"type-of-users-in-talawa",level:3},{value:"Type Of Users in Talawa",id:"type-of-users-in-talawa-1",level:3},{value:"Mutations Permitted by Roles.",id:"mutations-permitted-by-roles",level:3},{value:"<code>SUPERADMIN</code> -",id:"superadmin--",level:4},{value:"<code>ADMIN</code> -",id:"admin--",level:4},{value:"USER -",id:"user--",level:4}];function c(e){const n={blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",...(0,a.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"Mutations can be classified in a number of ways, including by the type of change that they introduce, the part of the page that they affect, or the manner in which they are introduced. Talawa API introduces mutation to alter it's value to a certain degree."}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"mutations-according-to-roles",children:"Mutations According to Roles"}),"\n",(0,t.jsx)(n.p,{children:"This document outlines our mutations and to which type of user each is constrained. Common types of mutations include insertions and deletions. Insertions are new changes to the Talawa API, while deletions removes."}),"\n",(0,t.jsx)(n.h3,{id:"type-of-users-in-talawa",children:"Type Of Users in Talawa"}),"\n",(0,t.jsx)(n.p,{children:"This document outlines our mutations and to which type of user each is constrained"}),"\n",(0,t.jsx)(n.h3,{id:"type-of-users-in-talawa-1",children:"Type Of Users in Talawa"}),"\n",(0,t.jsx)(n.p,{children:"There are mainly 3 types of user types in Talawa -"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"SUPERADMIN"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"ADMIN"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"USER"})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"mutations-permitted-by-roles",children:"Mutations Permitted by Roles."}),"\n",(0,t.jsx)(n.p,{children:"The limits of each role's use of mutations are stated below:"}),"\n",(0,t.jsxs)(n.h4,{id:"superadmin--",children:[(0,t.jsx)(n.code,{children:"SUPERADMIN"})," -"]}),"\n",(0,t.jsx)(n.p,{children:"Below are the Mutations exclusive to the SUPERADMIN type. Please note, a few of these mutations have a few extra criteria regarding user access. For example, except for the createOrganization mutation, all other mutations require the SUPERADMIN to also be the creator of the orgnanization."}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"blockPluginCreationBySuperadmin"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"createAdmin"})}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"createOrganization"})," - When a superadmin creates and organization, he/she will also be one of the ",(0,t.jsx)(n.code,{children:"admins"})," and ",(0,t.jsx)(n.code,{children:"creator"})," of that Organization. Therefore, the Mutations in the next Sections also apply to Super Admin."]}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"rejectAdmin"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"removeAdmin"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"removeOrganization"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"updateUserType"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"togglePostPin"})}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"admin--",children:[(0,t.jsx)(n.code,{children:"ADMIN"})," -"]}),"\n",(0,t.jsx)(n.p,{children:"An Admin of an organization is permitted to make the following Mutations in that Organization-"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"acceptMembershipRequests"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"addOrganizationImage"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"addUserToGroupChat"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"adminRemoveEvent"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"adminRemoveGroup"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"blockUser"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"rejectMemberShipRequests"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"removeDirectChat"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"removeMember"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"removeOrganizationImage"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"removeUserFromGroupChat"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"unblockUser"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"updateOrganization"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"togglePostPin"})}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"user--",children:"USER -"}),"\n",(0,t.jsx)(n.p,{children:"All other Mutations except those exclusive to Admin and Super Admin can be accessed by the User type."}),"\n",(0,t.jsx)(n.p,{children:"To be updated whenever new mutations are added"})]})}function h(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},11151:(e,n,i)=>{i.d(n,{Z:()=>r,a:()=>o});var t=i(67294);const a={},s=t.createContext(a);function o(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);