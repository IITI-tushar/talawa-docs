"use strict";(self.webpackChunktalawa_docs=self.webpackChunktalawa_docs||[]).push([[11923],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>f});var r=n(67294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,s=function(e,t){if(null==e)return{};var n,r,s={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,s=e.mdxType,a=e.originalType,c=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),u=l(n),p=s,f=u["".concat(c,".").concat(p)]||u[p]||m[p]||a;return n?r.createElement(f,o(o({ref:t},d),{},{components:n})):r.createElement(f,o({ref:t},d))}));function f(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var a=n.length,o=new Array(a);o[0]=p;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[u]="string"==typeof e?e:s,o[1]=i;for(var l=2;l<a;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},34202:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>m,frontMatter:()=>a,metadata:()=>i,toc:()=>l});var r=n(87462),s=(n(67294),n(3905));const a={},o="sendMembershipRequest method",i={unversionedId:"talawa-mobile-docs/view_model_access_request_view_model/AccessScreenViewModel/sendMembershipRequest",id:"talawa-mobile-docs/view_model_access_request_view_model/AccessScreenViewModel/sendMembershipRequest",title:"sendMembershipRequest method",description:"Future&lt;void> sendMembershipRequest",source:"@site/docs/talawa-mobile-docs/view_model_access_request_view_model/AccessScreenViewModel/sendMembershipRequest.md",sourceDirName:"talawa-mobile-docs/view_model_access_request_view_model/AccessScreenViewModel",slug:"/talawa-mobile-docs/view_model_access_request_view_model/AccessScreenViewModel/sendMembershipRequest",permalink:"/docs/talawa-mobile-docs/view_model_access_request_view_model/AccessScreenViewModel/sendMembershipRequest",draft:!1,editUrl:"https://github.com/PalisadoesFoundation/talawa-docs/edit/develop/docs/talawa-mobile-docs/view_model_access_request_view_model/AccessScreenViewModel/sendMembershipRequest.md",tags:[],version:"current",frontMatter:{},sidebar:"Talawa",previous:{title:"selectedOrganization property",permalink:"/docs/talawa-mobile-docs/view_model_access_request_view_model/AccessScreenViewModel/selectedOrganization"},next:{title:"AccessScreenViewModel class",permalink:"/docs/talawa-mobile-docs/view_model_access_request_view_model/AccessScreenViewModel-class"}},c={},l=[{value:"Implementation",id:"implementation",level:2}],d={toc:l},u="wrapper";function m(e){let{components:t,...n}=e;return(0,s.kt)(u,(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"sendmembershiprequest-method"},"sendMembershipRequest method"),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://api.flutter.dev/flutter/dart-async/Future-class.html"},"Future"),"<","void> sendMembershipRequest\n()"),(0,s.kt)("h2",{id:"implementation"},"Implementation"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-dart"},"Future<void> sendMembershipRequest() async {\n  //TODO: Implement Message arg for below function\n  final result = await databaseFunctions.gqlAuthMutation(\n    queries.sendMembershipRequest(selectedOrganization.id!),\n  );\n  if (result != null) {\n    final OrgInfo membershipRequest = OrgInfo.fromJson(\n      (((result as QueryResult).data!)['sendMembershipRequest']\n          as Map<String, dynamic>)['organization'] as Map<String, dynamic>,\n    );\n    userConfig.updateUserMemberRequestOrg([membershipRequest]);\n    if (userConfig.currentUser.joinedOrganizations!.isEmpty) {\n      navigationService.removeAllAndPush(\n        Routes.waitingScreen,\n        Routes.splashScreen,\n      );\n    } else {\n      navigationService.pop();\n      navigationService.showTalawaErrorSnackBar(\n        'Join in request sent to ${selectedOrganization.name} successfully',\n        MessageType.info,\n      );\n    }\n  }\n}\n")))}m.isMDXComponent=!0}}]);